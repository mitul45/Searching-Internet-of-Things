<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:PullAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ad802268d50"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ad802263618"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ad802263618"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ad802414278"/></to>
    </wire>
    <wire loc="19:PullAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad80249b900"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad80304d020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad80304d020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad80355a3f0"/></to>
    </wire>
    <wire loc="20:PullAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad8024a20f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad80304dbd8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad80304dbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad803559020"/></to>
    </wire>
    <wire loc="21:PullAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad802486020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad80304e390"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad80304e390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad80355b7b0"/></to>
    </wire>
    <wire loc="22:PullAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2ad8024ace80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad80241ebd8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad80241ebd8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad802505c28"/></to>
    </wire>
    <wire loc="23:PullAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad8024be4b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad803088490"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad803088490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad8024cedc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:PullAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad8024b0080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad803082020"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ad803082020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ad80307e7e0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802270a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad8034b0550"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802270a30"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802c42ca8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802270a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad802b536a0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802270a30"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802aa37f0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802270a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad8028fb020"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802270a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad802867020"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802270a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad8028404d8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802270a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad8033daaa0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ad8024148b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ad80214fbe8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ad80214fbe8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ad802228500"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ad802413398"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ad802d34b40"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ad802413398"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ad802c421f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ad802413398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad80226e8e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad80226e8e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad802271020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802413a60"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802270a30"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ad80226c508"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad802edadc0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad802274790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad8023f5158"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2ad802271d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad8023f6af8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ad8022716c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad8030a1460"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ad8022716c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ad802273680"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ad802273680"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ad8022820e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ad802273d10"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ad80226c508"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2ad802289388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2ad80228de00"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2ad80228de00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad802317740"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ad8022814f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ad802273d10"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2ad8022c7968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8023a3520"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2ad8022b14d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad802347020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad802347020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803222100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2ad8022b64d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad802348d60"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad802348d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803250100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2ad8022bd1a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad80235d8c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad80235d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8032d6100"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2ad8022981a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad802315a50"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad802315a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8030f6c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2ad8022c0e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad80235f5b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad80235f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8032dc100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2ad8022964d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad80231ebd0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad80231ebd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803132180"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2ad8022aa658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad802331740"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad802331740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8031a3100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2ad8022ae968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad802343430"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad802343430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803219100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2ad8022b3968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad802356120"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad802356120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803294100"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2ad802290968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad80231a2a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad80231a2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8030b9c38"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2ad8022a2968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad80232c020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad80232c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803129100"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2ad8022a7af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad80232dbd8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad80232dbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803199100"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2ad8022abe00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad8023408c8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad8023408c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad80320f100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2ad8022c9658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad80235ad60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad80235ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8032cd100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2ad8022c3348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8023bcc38"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2ad8022b81a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad80234aa50"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad80234aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803256100"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad802317740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8030fcc38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2ad80229e020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad802329430"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad802329430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803169100"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2ad8022c5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8023b2cd8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2ad80229c348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad802333500"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad802333500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8031a9180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2ad8022b0658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad802345120"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad802345120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad80321f100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2ad8022b5658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad802359e18"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad802359e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad80329b100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2ad8022bc348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad80235ca50"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad80235ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8032d3100"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2ad802297348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad802314bd8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad802314bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8030f3c38"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2ad802295658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad80231dd60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad80231dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad80312f100"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2ad8022a97e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad8023308c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad8023308c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8031a0100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2ad8022adaf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad8023425b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad8023425b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803216100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2ad8022c2af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad8023552a8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad8023552a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803291100"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2ad80228faf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad802319430"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad802319430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8030b6c38"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2ad8022a1af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad80232b120"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad80232b120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803126100"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2ad8022a5c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad80233ed60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad80233ed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803196100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2ad8022c87e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad80236ae18"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad80236ae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8032c9100"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2ad8022b2020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad802337e40"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad802337e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803225180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2ad8022b7348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad802349bd8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad802349bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803253100"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2ad8022be020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad80235e740"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad80235e740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8032d9100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2ad8022d24d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8023b63e0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2ad802299020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad8023168c8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad8023168c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8030f9c38"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2ad80229d1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad8023285b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad8023285b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803166100"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2ad8022c1c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad802360500"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad802360500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8032df180"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2ad80229b4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ad8023325b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ad8023325b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8031a6100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2ad8022af7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad8023442a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad8023442a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad80321c100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2ad8022b47e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad802357020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad802357020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803298100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2ad8022ca4d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad80235bbd8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad80235bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8032d0100"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2ad8022847d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad80230b1e8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad80230b1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8030bcc38"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2ad8022947e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ad80231ce18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ad80231ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad80312c100"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2ad8022a8968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ad80232fa50"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ad80232fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad80319d100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2ad8022acc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ad802341740"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ad802341740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803212100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2ad8022c41a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8023ad3e0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2ad8022b9020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ad80234b930"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ad80234b930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803259180"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2ad8022a4e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ad80233de18"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ad80233de18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad803193100"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2ad80228ec78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ad8023185b8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ad8023185b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad8030b3c38"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2ad8022a0e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ad80232a2a8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ad80232a2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ad80316c100"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad8022273c8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ad802224918"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ad802243698"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad80224c8e0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad8029c0578"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad802505c28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad802525180"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad8024f1758"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad80252ce48"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad80252ce48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad80255dbf0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ad8024e1e28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ad8024ff498"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ad8024ff498"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ad802521978"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad8024cfc30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad802502c30"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad802502c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad8025241c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ad8024cd968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ad802500968"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ad802500968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ad802522e48"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad8024e3430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad8024ffa70"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad8024ffa70"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2ad8025396d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad8024eb848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad8025137b0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad8025137b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad802553af8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad8024cedc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad802501dc0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad802501dc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad802522300"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8024d80d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8024fce00"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8024fce00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8025531a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ad8024e4828"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ad8025122d0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ad8025122d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ad8025525e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad8024e2080"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad8024fd758"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad8024fd758"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad802520020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2ad8024f28c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802517020"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802517020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802560d08"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad802525180"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad802886920"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2ad80251c4e0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2ad80254a600"/></to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2ad80254a600"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2ad802c23b20"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ad802521978"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ad80265a978"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2ad8025396d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad802640020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad8025241c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad80263f1c8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ad802522e48"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ad80263ee48"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ad80251f060"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ad80254d2d0"/></to>
    </wire>
    <wire loc="273:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ad80254d2d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ad802c256b0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad802553af8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad802881318"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad802522300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad80263e300"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802560d08"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802bd1cc8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802516ba0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802548938"/></to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802548938"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802c19828"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ad802509cb0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ad802551e40"/></to>
    </wire>
    <wire loc="274:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ad802551e40"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ad802c1c390"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8025531a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad802b71020"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ad8025525e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ad802895c50"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad802520020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad802632920"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2ad80250ed28"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2ad8025512e8"/></to>
    </wire>
    <wire loc="198:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2ad8025512e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2ad802ab0020"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad80255dbf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad802bd6e58"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad802886920"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ad802880020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2ad802c23b20"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2ad802c3a020"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2ad802536218"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ad802755ca8"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2ad80252e208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad80273a200"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad80273a200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad8033d8dd8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ad80265a978"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ad802665348"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad80263f1c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad802669aa8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ad80263ee48"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ad802667818"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad802542020"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad8027c0da8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad8027c0da8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad8027b7080"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2ad8025413d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad802759b98"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ad802881318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ad80287ce20"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ad802c256b0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ad802c3eb48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad80263e300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad802668c38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad802640020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad80266a8c8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802bd1cc8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802bf6378"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802c19828"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802d39670"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ad802c1c390"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ad802c34860"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad802b71020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad802b6a940"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2ad802530d80"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2ad8027568f8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ad802895c50"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ad802890dc0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad802632920"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad80264d2c0"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2ad802537af0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2ad802755690"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2ad802ab0020"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2ad802aa2e50"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad802bd6e58"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad802bfa478"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ad8025ab8c0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ad8027a0408"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ad8027a0408"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ad8027bc778"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ad8025a9020"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ad80261f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad8025a4268"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802bd1cc8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2ad8025a8150"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad802c26530"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ad802c26530"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad802c3fa50"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ad8026519f8"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2ad80258fa60"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad802654890"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2ad8026c8100"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad802651320"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2ad802789d48"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad802659120"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2ad802788450"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad8026d93f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad80273a200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad8026c8a48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2ad802789368"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ad8027543c0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ad8027a0408"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad802752da8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad8027c0da8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad80274f020"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2ad80278b170"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad80274f9e0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2ad80278bb58"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ad8027500c0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad80278a3a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad8027873e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad802825de8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad802825de8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad80281d418"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad802787da8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad802883e58"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad802883e58"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ad80287e518"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad8027854c8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad8027be0c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ad8027be0c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad8027b6460"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad8027bd020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad8028824a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ad8028824a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ad80287ebc0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ad802820020"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2ad8025758d8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad80281ec80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad8028834b8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad8028834b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad802880b30"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ad802880020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad802ab44a0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad802ab44a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ad802aa8c08"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad802880b30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad802895340"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad802895340"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad8028904b0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad80287e518"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad802ab19c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad802ab19c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ad802aa2838"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad80287ebc0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad8028948f8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ad8028948f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad8028b4a48"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8028911c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad802b71020"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad802893860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad802ab1020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad802ab1020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad802aa3e50"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad802892378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad802bcd810"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ad802bcd810"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad802bf2020"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ad802aa6200"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ad802b03060"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ad802b03060"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x2ad802b2e5b8"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ad802aa6b28"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ad80281e3e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ad80281e3e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ad80281dd40"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ad802aa90d0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2ad802b042e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ad802b042e8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2ad802b2f638"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad8028216a0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b03908"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b03908"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x2ad802b2d020"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ad802b2bda0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2ad80258d608"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x2ad802b2e5b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ad802b242b8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ad802b242b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ad802b21d98"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioReceive" scoped="" ref="0x2ad802b2d020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b24be0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b24be0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b1e748"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2ad802b2f638"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2ad802c2ce68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ad802c2ce68"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2ad802c412d0"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ad802b22898"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2ad8025815a8"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad802b23578"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ad802b75de0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ad802b75de0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ad802b6e7e0"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad802b22020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b72748"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b72748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b6a140"/></to>
    </wire>
    <wire loc="236:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ad802b70d68"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2ad80257a368"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad802b71a50"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ad802be3060"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ad802be3060"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x2ad802bdd5b8"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad802b70518"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ad802c285f8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ad802c285f8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ad802c409e8"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ad802bdada0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2ad80258d608"/></to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x2ad802bdd5b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ad802c29c38"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ad802c29c38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ad802c400c0"/></to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2ad802bdc780"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2ad802c28d70"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2ad802c28d70"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2ad802c3f2c0"/></to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802bcb890"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802c19828"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad802bca978"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad802ba0460"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad802b9f418"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ad802c26530"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ad802c189b8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2ad8025695b0"/></to>
    </wire>
    <wire loc="272:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad802c4ba40"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802bd1cc8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ad80261f020"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ad80262e020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad80261e288"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad802d3c418"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad80262c020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad80261e288"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2ad8026246a0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2ad802613e50"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad80265d3f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad8026c2e58"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad802665a90"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ad802659120"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad802664968"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad802654890"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad802663380"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ad802651320"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ad802663a58"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ad8026519f8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad802739020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad8033d7af8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad802739760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad8033d6268"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad8033d6b08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad802738020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad8033d42b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ad8033d90a0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad8033d4d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad8027b53d8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad8026c2e58"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad8027b4020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ad8027bd020"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2ad802837438"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2ad802841b28"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2ad802841b28"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2ad802867638"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ad802832a50"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ad802845990"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ad802845990"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ad802866808"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad802840bf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad80281ec80"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad80283f6a0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ad8028216a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2ad80283fe40"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ad802820020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad8028b39e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad802893860"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8028b24d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8028911c0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad8028a36a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ad802892378"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2ad8028a65a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad8028e5a60"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad8028e5a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad8028dfe28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2ad8028a1680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ad8028dfe28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ad8028fbd18"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ad8028fbd18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad802a805e0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad8028fb020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad8028f2658"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ad8028f4020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad802a9e128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad8028f2658"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad802a16020"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ad802a7a858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad802a42ab0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad802a3dc70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2ad802917020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2ad802917020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad802a167c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad802a95330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2ad802912150"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2ad802912150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad802a12a90"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad802a12a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad8033f3a90"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad802a16020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad8033f71a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad802a167c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad8033f7950"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad803445b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad802984288"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad802984288"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad8029a2e00"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ad803440b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ad8029a93c0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ad8029a93c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ad80299a020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ad80343fe68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad8029a87f8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ad8029a87f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad802999340"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2ad80343a060"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2ad8029a49e8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2ad8029a49e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2ad8029c0c78"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ad802a39cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ad802a75930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ad802ad1848"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2ad802aa90d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2ad802ad0748"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2ad802613e50"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ad802acf2c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ad802aa6200"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ad802acfbf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ad802aa6b28"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2ad802abf368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2ad802ae4190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="280:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2ad802afb368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad802b06978"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ad802b31bf0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2ad802b32060"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2ad802b2d780"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad802b05430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad802b30740"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ad802b32780"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ad802b2b020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2ad802b315b8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ad802b2bda0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad802b05d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ad802b2f060"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad802b1d020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad802b23578"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ad802b4ac18"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ad802b22898"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad802b1d9f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ad802b22020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ad802b1c2d0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ad80261f020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ad802b4a3a0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ad802b56208"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ad802b56208"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ad802b51080"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2ad802b46cd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2ad802b581a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2ad802b52020"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad802b5c338"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad802b536a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ad802b693f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad802b71a50"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ad802b69dc0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ad802b70518"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2ad802b67318"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ad802b70d68"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ad802b685a8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ad80261f020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2ad802b92468"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ad802ba6980"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <from><interface-ref name="PacketFlag" scoped="" ref="0x2ad802ba6980"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ad802ba38f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ad802bb2978"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ad802be0bf0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2ad802be1060"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2ad802bdc780"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ad802bb02e8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2ad802bde638"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad802bb1430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ad802bdf740"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ad802be1780"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ad802bda020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2ad802be05b8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ad802bdada0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ad802be3908"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x2ad802bdc020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ad802bb1d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ad802bde060"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ad802bed0c0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ad802bca978"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802bf1cc8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802bcb890"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ad802bef020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad802bfce28"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ad802bfce28"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad8028f4020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2ad802bf1020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ad802c2f060"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <from><interface-ref name="PacketFlag" scoped="" ref="0x2ad802c2f060"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ad802ba38f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad802c1e020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad802c373b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802d39670"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad802f4d400"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ad802c58c30"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ad802c189b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2ad802c559e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ad802f7bb98"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <from><interface-ref name="PacketFlag" scoped="" ref="0x2ad802f7bb98"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ad802ba38f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2ad802c54678"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ad802f78140"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <from><interface-ref name="PacketFlag" scoped="" ref="0x2ad802f78140"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ad802ba38f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2ad802c53208"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ad802f76600"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <from><interface-ref name="PacketFlag" scoped="" ref="0x2ad802f76600"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ad802ba38f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad802c51020"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad802c4ba40"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ad802c59b48"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802d39670"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ad802c4d768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ad80261f020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad802d3c418"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad802f13b68"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2ad802c67a88"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2ad802d45910"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2ad802d45910"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2ad8022964d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ad802c66ca0"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2ad802d42b18"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ad802d42b18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad802d4f1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ad802c5faf8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ad802d41770"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ad802d41770"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ad802d4ec40"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2ad802c64658"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2ad802d40348"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2ad802d40348"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2ad80229d1a0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ad802c637d0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2ad802d3f4c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ad802d3f4c0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2ad8022981a0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2ad802c5d020"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2ad802d3e648"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2ad802d3e648"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2ad802d34020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2ad802c4fa40"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2ad802613e50"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2ad802c56748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2ad802f803c0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ad802f13b68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ad8034ea750"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ad802d4ec40"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ad802d7d938"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ad802f4d400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ad802f8cc38"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2ad802d63e50"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2ad8022acc78"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2ad802d61020"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2ad8022ae968"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2ad802d2b7f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad802e4aca0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2ad802e4aca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ad802e6d350"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ad802d80480"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ad802d7c450"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ad802d4e5f8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ad802d7d330"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad802d52020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad802d4dd18"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad802d4f1c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad802d7b1c8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2ad802d99888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad802e1f878"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ad802e1f878"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ad8034ae918"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad802d975e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad802e1edd8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad802e1edd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad8034addd8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2ad802d9a5a8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2ad802dc1020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2ad802dc1020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2ad802dbedc0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2ad802d97d90"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ad802240b08"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2ad802db0830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2ad802ded350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ad802240b08"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2ad802df0c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2ad8022964d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2ad802df4de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2ad802295658"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2ad802def020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2ad8022947e0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2ad802dee190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2ad8022a2968"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ad802e1e698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ad8034ad698"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad8034ac6c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad802e1d6a0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ad8034ace40"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ad8034b0b28"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ad8034aa920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ad802e415e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ad802e6fc90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad802e526e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad802e38be0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ad802e3da20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2ad802e69c48"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ad802e3da20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2ad802e64020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ad802e3da20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2ad802e60360"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2ad8034e79c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad802e526e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2ad8034e1a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ad802e3da20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad802ed9540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad802e526e0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad802f8be48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad802f6a270"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ad802f90450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad802f48108"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ad802f48108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ad802f45e08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ad802f30020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ad802e526e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad80355b7b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad80354fa80"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad80355a3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad8024e3430"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad803559020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad8024e2080"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad80304b2a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ad8035585b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ad8035585b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8024d80d0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad80354e760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad80301e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad80354d3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad8024e2080"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ad80301e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ad8030622c8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ad803061060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ad8024cfc30"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad803061c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad8024e2080"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad80305f268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad8024e3430"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2ad80305e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2ad80305e7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ad803088a28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ad8024e3430"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ad803087700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ad8024e2080"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ad8030a1460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ad80307e218"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ad80307de70"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2ad8030a4020"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ad8030a4020"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2ad80228faf0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ad80307b020"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2ad8030a31b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ad8030a31b0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2ad802290968"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ad80307a190"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2ad8030a2378"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ad8030a2378"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2ad8022847d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.5 2009/02/04 19:31:43 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PullC" loc="4:PullC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="24(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="73(RF230RadioC.SendResourceC):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="32(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkLayerC.DelayTimerC" loc="36(PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ad80290a0a8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="24(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="SoftwareAckLayerC.MetadataFlagC" loc="24(SoftwareAckLayerC.MetadataFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="24(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC.TimeStampFlagC" loc="24(TimeStampingLayerC.TimeStampFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="1">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="24:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TOne" ref="0x2ad80221f1c8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TOne" ref="0x2ad80221f1c8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.1.1/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230DriverLayerC.TransmitPowerFlagC" loc="24(RF230DriverLayerC.TransmitPowerFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="2">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.RSSIFlagC" loc="24(RF230DriverLayerC.RSSIFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="3">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.TimeSyncFlagC" loc="24(RF230DriverLayerC.TimeSyncFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="4">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PullAppC.AMSenderC" loc="39(PullAppC.AMSenderC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PullAppC.AMSenderC.SenderC" loc="39(PullAppC.AMSenderC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PullAppC.AMSenderC.SenderC.AMQueueEntryP" loc="35(PullAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PullAppC.AMReceiverC" loc="35(PullAppC.AMReceiverC):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ad8022cf748" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ad8022cfa90" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ad8022cfdd8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ad8022df020" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ad8022df388" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ad8022df6f0" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ad8022dfa20" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ad802374508" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ad802374870" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ad802374bd8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ad802373020" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ad8026f5b78" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2ad802705170" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ad80290a0a8" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ad80290a0a8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ad80290a398" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ad802929778" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ad802929778"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ad802929a68" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad802918c60" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad802918c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad802a37cc8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad802a37cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ad802a34020" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad802aa09f0" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad802aa09f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MetadataFlagC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ad802edbe00" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad802edbe00"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2ad802ed81a0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ad802edc750" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ad802edc750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2ad802f04020" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad802f04020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2ad802f04320" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ad802f43430" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ad802f43430"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2ad802f43b80" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad802f43b80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ad802f6c918" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ad802f6c918"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ad802f690a8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ad802f690a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ad802f69470" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ad802f69470"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ad802f69be8" loc="47:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ad802f69be8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ad802f67020" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2ad802f677b0" loc="49:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2ad802f677b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ad802fc6668" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ad802fbc348" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ad802ffce20" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2ad80301a2a8" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ad803047318" loc="35:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2ad802270a30" loc="47:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802270a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802270d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ad802263618" loc="46:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ad802263618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ad802263968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ad80226c508" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ad80226c508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad80226c858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad80226e8e8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad80226e8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad80226ec38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ad802274790" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad802274790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ad802274ae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ad802274c68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ad802274df0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ad80226c020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ad80226c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2ad8022716c0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2ad8022716c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802271a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad802271020" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad802271020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802271370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2ad802271d88" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2ad802271d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad80227e170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ad802273d10" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ad802273d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad8022850a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ad802273680" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad802273680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad8022739d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ad8022814f8" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ad8022814f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802281848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2ad802289388" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2ad802289388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022896d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802289860"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022899e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802289b70"/>
        <function-ref name="get" scoped="" ref="0x2ad802289cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802289e80"/>
        <function-ref name="set" scoped="" ref="0x2ad802281030"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022811b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ad8022820e0" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad8022820e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802282430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2ad8022c7968" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2ad8022c7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022c60f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022c6278"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022c6400"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022c6588"/>
        <function-ref name="get" scoped="" ref="0x2ad8022c6710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022c6898"/>
        <function-ref name="set" scoped="" ref="0x2ad8022c6a20"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022c6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2ad8022b14d0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2ad8022b14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022b1820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022b19a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022b1b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022b1cb8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022b1e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022b0020"/>
        <function-ref name="set" scoped="" ref="0x2ad8022b01a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2ad8022b64d0" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2ad8022b64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022b6820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022b69a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022b6b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022b6cb8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022b6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022b5020"/>
        <function-ref name="set" scoped="" ref="0x2ad8022b51a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022b5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2ad8022bd1a0" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2ad8022bd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022bd4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022bd678"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022bd800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022bd988"/>
        <function-ref name="get" scoped="" ref="0x2ad8022bdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022bdc98"/>
        <function-ref name="set" scoped="" ref="0x2ad8022bde20"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2ad8022981a0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2ad8022981a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022984f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802298678"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802298800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802298988"/>
        <function-ref name="get" scoped="" ref="0x2ad802298b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802298c98"/>
        <function-ref name="set" scoped="" ref="0x2ad802298e20"/>
        <function-ref name="clr" scoped="" ref="0x2ad802297020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2ad8022c0e00" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2ad8022c0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022bf1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022bf330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022bf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022bf640"/>
        <function-ref name="get" scoped="" ref="0x2ad8022bf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022bf950"/>
        <function-ref name="set" scoped="" ref="0x2ad8022bfad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022bfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2ad8022964d0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2ad8022964d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802296820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022969a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802296b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802296cb8"/>
        <function-ref name="get" scoped="" ref="0x2ad802296e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802295020"/>
        <function-ref name="set" scoped="" ref="0x2ad8022951a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802295330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2ad8022aa658" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2ad8022aa658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022aa9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022aab30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022aacb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022aae40"/>
        <function-ref name="get" scoped="" ref="0x2ad8022a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022a91a8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022a9330"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022a94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2ad8022ae968" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2ad8022ae968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022aecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022aee40"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022ad1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022ad330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022ad4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022ad640"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022ad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2ad8022b3968" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2ad8022b3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022b3cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022b3e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022c21a8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022c2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022c24b8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022c2640"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022c27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2ad802290968" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2ad802290968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802290cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802290e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80228f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80228f1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad80228f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80228f4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad80228f640"/>
        <function-ref name="clr" scoped="" ref="0x2ad80228f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2ad8022a2968" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2ad8022a2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022a2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022a2e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022a11a8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022a1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022a14b8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022a1640"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022a17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2ad8022a7af0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2ad8022a7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022a7e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022a5020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022a51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022a5330"/>
        <function-ref name="get" scoped="" ref="0x2ad8022a54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022a5640"/>
        <function-ref name="set" scoped="" ref="0x2ad8022a57c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022a5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2ad8022abe00" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2ad8022abe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022ba1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022ba330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022ba4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022ba640"/>
        <function-ref name="get" scoped="" ref="0x2ad8022ba7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022ba950"/>
        <function-ref name="set" scoped="" ref="0x2ad8022baad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022bac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2ad8022c9658" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2ad8022c9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022c99a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022c9b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022c9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022c9e40"/>
        <function-ref name="get" scoped="" ref="0x2ad8022c8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022c81a8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022c8330"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022c84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2ad8022c3348" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2ad8022c3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022c3698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022c3820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022c39a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022c3b30"/>
        <function-ref name="get" scoped="" ref="0x2ad8022c3cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022c3e40"/>
        <function-ref name="set" scoped="" ref="0x2ad8022d2020"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022d21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2ad8022b81a0" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2ad8022b81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022b84f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022b8678"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022b8800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022b8988"/>
        <function-ref name="get" scoped="" ref="0x2ad8022b8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022b8c98"/>
        <function-ref name="set" scoped="" ref="0x2ad8022b8e20"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2ad80228de00" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2ad80228de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80229a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80229a330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80229a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80229a640"/>
        <function-ref name="get" scoped="" ref="0x2ad80229a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80229a950"/>
        <function-ref name="set" scoped="" ref="0x2ad80229aad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad80229ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2ad80229e020" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2ad80229e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80229e370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80229e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80229e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80229e808"/>
        <function-ref name="get" scoped="" ref="0x2ad80229e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80229eb18"/>
        <function-ref name="set" scoped="" ref="0x2ad80229eca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad80229ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2ad8022c5020" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2ad8022c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022c5370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022c54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022c5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022c5808"/>
        <function-ref name="get" scoped="" ref="0x2ad8022c5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022c5b18"/>
        <function-ref name="set" scoped="" ref="0x2ad8022c5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022c5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2ad80229c348" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2ad80229c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80229c698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80229c820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80229c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80229cb30"/>
        <function-ref name="get" scoped="" ref="0x2ad80229ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80229ce40"/>
        <function-ref name="set" scoped="" ref="0x2ad80229b020"/>
        <function-ref name="clr" scoped="" ref="0x2ad80229b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2ad8022b0658" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2ad8022b0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022b09a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022b0b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022b0cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022b0e40"/>
        <function-ref name="get" scoped="" ref="0x2ad8022af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022af1a8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022af330"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2ad8022b5658" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2ad8022b5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022b59a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022b5b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022b5cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022b5e40"/>
        <function-ref name="get" scoped="" ref="0x2ad8022b4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022b41a8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022b4330"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2ad8022bc348" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2ad8022bc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022bc698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022bc820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022bc9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022bcb30"/>
        <function-ref name="get" scoped="" ref="0x2ad8022bccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022bce40"/>
        <function-ref name="set" scoped="" ref="0x2ad8022ca020"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2ad802297348" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2ad802297348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802297698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802297820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022979a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802297b30"/>
        <function-ref name="get" scoped="" ref="0x2ad802297cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802297e40"/>
        <function-ref name="set" scoped="" ref="0x2ad802296020"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2ad802295658" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2ad802295658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022959a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802295b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802295cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802295e40"/>
        <function-ref name="get" scoped="" ref="0x2ad802294020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022941a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802294330"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022944b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2ad8022a97e0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2ad8022a97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022a9b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022a9cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022a9e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022a8020"/>
        <function-ref name="get" scoped="" ref="0x2ad8022a81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022a8330"/>
        <function-ref name="set" scoped="" ref="0x2ad8022a84b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022a8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2ad8022adaf0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2ad8022adaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022ade40"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022ac020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022ac1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022ac330"/>
        <function-ref name="get" scoped="" ref="0x2ad8022ac4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022ac640"/>
        <function-ref name="set" scoped="" ref="0x2ad8022ac7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022ac950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2ad8022c2af0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2ad8022c2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022c2e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022c1020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022c11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022c1330"/>
        <function-ref name="get" scoped="" ref="0x2ad8022c14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022c1640"/>
        <function-ref name="set" scoped="" ref="0x2ad8022c17c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022c1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2ad80228faf0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2ad80228faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80228fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80228e020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80228e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80228e330"/>
        <function-ref name="get" scoped="" ref="0x2ad80228e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80228e640"/>
        <function-ref name="set" scoped="" ref="0x2ad80228e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad80228e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2ad8022a1af0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2ad8022a1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022a0020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022a01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022a0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022a04b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022a0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022a07c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022a0950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022a0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2ad8022a5c78" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2ad8022a5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022a4020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022a41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022a4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022a44b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022a4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022a47c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022a4950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022a4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2ad8022c87e0" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2ad8022c87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022c8b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022c8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022c8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022c7020"/>
        <function-ref name="get" scoped="" ref="0x2ad8022c71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022c7330"/>
        <function-ref name="set" scoped="" ref="0x2ad8022c74b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022c7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2ad8022b2020" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2ad8022b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022b2570"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022b26f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022b2880"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022b2a08"/>
        <function-ref name="get" scoped="" ref="0x2ad8022b2b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022b2d18"/>
        <function-ref name="set" scoped="" ref="0x2ad8022b1020"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2ad8022b7348" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2ad8022b7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022b7698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022b7820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022b79a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022b7b30"/>
        <function-ref name="get" scoped="" ref="0x2ad8022b7cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022b7e40"/>
        <function-ref name="set" scoped="" ref="0x2ad8022b6020"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2ad8022be020" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2ad8022be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022be370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022be4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022be680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022be808"/>
        <function-ref name="get" scoped="" ref="0x2ad8022be990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022beb18"/>
        <function-ref name="set" scoped="" ref="0x2ad8022beca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022bee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2ad8022d24d0" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2ad8022d24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022d2820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022d29a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022d2b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022d2cb8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022d2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022d1020"/>
        <function-ref name="set" scoped="" ref="0x2ad8022d11a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022d1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2ad802299020" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2ad802299020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802299370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022994f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802299680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802299808"/>
        <function-ref name="get" scoped="" ref="0x2ad802299990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802299b18"/>
        <function-ref name="set" scoped="" ref="0x2ad802299ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad802299e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2ad80229d1a0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2ad80229d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80229d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80229d678"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80229d800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80229d988"/>
        <function-ref name="get" scoped="" ref="0x2ad80229db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80229dc98"/>
        <function-ref name="set" scoped="" ref="0x2ad80229de20"/>
        <function-ref name="clr" scoped="" ref="0x2ad80229c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2ad8022c1c78" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2ad8022c1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022c0020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022c01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022c0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022c04b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022c0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022c07c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022c0950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022c0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2ad80229b4d0" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2ad80229b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80229b820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80229b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80229bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80229bcb8"/>
        <function-ref name="get" scoped="" ref="0x2ad80229be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022aa020"/>
        <function-ref name="set" scoped="" ref="0x2ad8022aa1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2ad8022af7e0" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2ad8022af7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022afb30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022afcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022afe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022ae020"/>
        <function-ref name="get" scoped="" ref="0x2ad8022ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022ae330"/>
        <function-ref name="set" scoped="" ref="0x2ad8022ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2ad8022b47e0" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2ad8022b47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022b4b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022b4cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022b4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022b3020"/>
        <function-ref name="get" scoped="" ref="0x2ad8022b31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022b3330"/>
        <function-ref name="set" scoped="" ref="0x2ad8022b34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022b3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2ad8022ca4d0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2ad8022ca4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022ca820"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022ca9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022cab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022cacb8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022cae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022c9020"/>
        <function-ref name="set" scoped="" ref="0x2ad8022c91a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022c9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2ad8022847d0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2ad8022847d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802284b20"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802284ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802284e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802290020"/>
        <function-ref name="get" scoped="" ref="0x2ad8022901a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802290330"/>
        <function-ref name="set" scoped="" ref="0x2ad8022904b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802290640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2ad8022947e0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2ad8022947e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802294b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802294cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802294e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022a2020"/>
        <function-ref name="get" scoped="" ref="0x2ad8022a21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022a2330"/>
        <function-ref name="set" scoped="" ref="0x2ad8022a24b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022a2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2ad8022a8968" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2ad8022a8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022a8cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022a8e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022a71a8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022a7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022a74b8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022a7640"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022a77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2ad8022acc78" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2ad8022acc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022ab020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022ab1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022ab330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022ab4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8022ab640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022ab7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8022ab950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022abad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2ad8022c41a0" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2ad8022c41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022c44f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022c4678"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022c4800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022c4988"/>
        <function-ref name="get" scoped="" ref="0x2ad8022c4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022c4c98"/>
        <function-ref name="set" scoped="" ref="0x2ad8022c4e20"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2ad8022b9020" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2ad8022b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022b9370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022b94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022b9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022b9808"/>
        <function-ref name="get" scoped="" ref="0x2ad8022b9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022b9b18"/>
        <function-ref name="set" scoped="" ref="0x2ad8022b9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022b9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2ad8022a4e00" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2ad8022a4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8022a31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8022a3330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8022a34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8022a3640"/>
        <function-ref name="get" scoped="" ref="0x2ad8022a37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8022a3950"/>
        <function-ref name="set" scoped="" ref="0x2ad8022a3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8022a3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2ad80228ec78" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2ad80228ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80228d020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80228d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80228d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80228d4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad80228d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80228d7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad80228d950"/>
        <function-ref name="clr" scoped="" ref="0x2ad80228dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2ad8022a0e00" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2ad8022a0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80229f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80229f330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80229f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80229f640"/>
        <function-ref name="get" scoped="" ref="0x2ad80229f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80229f950"/>
        <function-ref name="set" scoped="" ref="0x2ad80229fad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad80229fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad802319430" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad802319430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802319780"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802319908"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802319a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802319c18"/>
        <function-ref name="get" scoped="" ref="0x2ad802319da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802318020"/>
        <function-ref name="set" scoped="" ref="0x2ad8023181a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802318330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad8023168c8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad8023168c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802316c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802316da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802315020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8023151a8"/>
        <function-ref name="get" scoped="" ref="0x2ad802315330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023154b8"/>
        <function-ref name="set" scoped="" ref="0x2ad802315640"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023157c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad80230b1e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad80230b1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80230b538"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80230b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80230b848"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80230b9d0"/>
        <function-ref name="get" scoped="" ref="0x2ad80230bb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80230bce0"/>
        <function-ref name="set" scoped="" ref="0x2ad80230be68"/>
        <function-ref name="clr" scoped="" ref="0x2ad80231a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad8023185b8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad8023185b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802318908"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802318a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802318c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802318da0"/>
        <function-ref name="get" scoped="" ref="0x2ad802317020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023171a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802317330"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad802315a50" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad802315a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802315da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802314020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023141a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802314330"/>
        <function-ref name="get" scoped="" ref="0x2ad8023144b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802314640"/>
        <function-ref name="set" scoped="" ref="0x2ad8023147c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802314950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad80231a2a8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad80231a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80231a5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80231a780"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80231a908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80231aa90"/>
        <function-ref name="get" scoped="" ref="0x2ad80231ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80231ada0"/>
        <function-ref name="set" scoped="" ref="0x2ad802319020"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad802317740" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad802317740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802317a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802317c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802317da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802316020"/>
        <function-ref name="get" scoped="" ref="0x2ad8023161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802316330"/>
        <function-ref name="set" scoped="" ref="0x2ad8023164b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802316640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad802314bd8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad802314bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802313020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023131a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802313330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8023134b8"/>
        <function-ref name="get" scoped="" ref="0x2ad802313640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023137c8"/>
        <function-ref name="set" scoped="" ref="0x2ad802313950"/>
        <function-ref name="clr" scoped="" ref="0x2ad802313ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8030bcc38" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8030bcc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030bb020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030bb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030bb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030bb4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8030bb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030bb7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8030bb950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030bbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8030b9c38" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8030b9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030b8020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030b81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030b8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030b84b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8030b8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030b87c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8030b8950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030b8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8030b6c38" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8030b6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030b5020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030b51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030b5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030b54b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8030b5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030b57c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8030b5950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030b5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8030b3c38" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8030b3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030fe020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030fe1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030fe330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030fe4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8030fe640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030fe7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8030fe950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030fead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8030fcc38" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8030fcc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030fb020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030fb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030fb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030fb4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8030fb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030fb7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8030fb950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030fbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8030f9c38" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8030f9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030f8020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030f81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030f8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030f84b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8030f8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030f87c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8030f8950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030f8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8030f6c38" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8030f6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030f5020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030f51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030f5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030f54b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8030f5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030f57c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8030f5950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030f5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8030f3c38" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8030f3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030f2020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030f21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030f2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030f24b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8030f2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030f27c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8030f2950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030f2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad80231ce18" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad80231ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80231b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80231b330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80231b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80231b640"/>
        <function-ref name="get" scoped="" ref="0x2ad80231b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80231b950"/>
        <function-ref name="set" scoped="" ref="0x2ad80231bad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad80231bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad80232a2a8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad80232a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80232a5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80232a780"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80232a908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80232aa90"/>
        <function-ref name="get" scoped="" ref="0x2ad80232ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80232ada0"/>
        <function-ref name="set" scoped="" ref="0x2ad802329020"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad80231ebd0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad80231ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80231d020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80231d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80231d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80231d4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad80231d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80231d7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad80231d950"/>
        <function-ref name="clr" scoped="" ref="0x2ad80231dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad80232c020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad80232c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80232c370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80232c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80232c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80232c808"/>
        <function-ref name="get" scoped="" ref="0x2ad80232c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80232cb18"/>
        <function-ref name="set" scoped="" ref="0x2ad80232cca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad80232ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad802329430" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad802329430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802329780"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802329908"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802329a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802329c18"/>
        <function-ref name="get" scoped="" ref="0x2ad802329da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802328020"/>
        <function-ref name="set" scoped="" ref="0x2ad8023281a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802328330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad80231dd60" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad80231dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80231c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80231c260"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80231c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80231c570"/>
        <function-ref name="get" scoped="" ref="0x2ad80231c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80231c880"/>
        <function-ref name="set" scoped="" ref="0x2ad80231ca08"/>
        <function-ref name="clr" scoped="" ref="0x2ad80231cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad80232b120" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad80232b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80232b470"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80232b5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80232b780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80232b908"/>
        <function-ref name="get" scoped="" ref="0x2ad80232ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80232bc18"/>
        <function-ref name="set" scoped="" ref="0x2ad80232bda0"/>
        <function-ref name="clr" scoped="" ref="0x2ad80232a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad8023285b8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad8023285b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802328908"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802328a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802328c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802328da0"/>
        <function-ref name="get" scoped="" ref="0x2ad802326020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023261a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802326330"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023264b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803132180" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803132180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8031324d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad803132658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8031327e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad803132968"/>
        <function-ref name="get" scoped="" ref="0x2ad803132af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803132c78"/>
        <function-ref name="set" scoped="" ref="0x2ad803132e00"/>
        <function-ref name="clr" scoped="" ref="0x2ad803131020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80312f100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80312f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80312f450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80312f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80312f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80312f8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad80312fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80312fbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad80312fd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad80312e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80312c100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80312c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80312c450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80312c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80312c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80312c8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad80312ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80312cbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad80312cd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad80312b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803129100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803129100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803129450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031295d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803129760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031298e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803129a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803129bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803129d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803128020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803126100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803126100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803126450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031265d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803126760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031268e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803126a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803126bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803126d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803124020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80316c100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80316c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80316c450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80316c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80316c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80316c8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad80316ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80316cbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad80316cd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad80316b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803169100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803169100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803169450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031695d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803169760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031698e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803169a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803169bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803169d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803168020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803166100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803166100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803166450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031665d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803166760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031668e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803166a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803166bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803166d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803165020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad802331740" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad802331740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802331a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802331c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802331da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802330020"/>
        <function-ref name="get" scoped="" ref="0x2ad8023301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802330330"/>
        <function-ref name="set" scoped="" ref="0x2ad8023304b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802330640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad80232dbd8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad80232dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80233e020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80233e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80233e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80233e4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad80233e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80233e7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad80233e950"/>
        <function-ref name="clr" scoped="" ref="0x2ad80233ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad802333500" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad802333500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802333850"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023339d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802333b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802333ce8"/>
        <function-ref name="get" scoped="" ref="0x2ad802333e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802332020"/>
        <function-ref name="set" scoped="" ref="0x2ad8023321a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802332330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad8023308c8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad8023308c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802330c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802330da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80232f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80232f1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad80232f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80232f4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad80232f640"/>
        <function-ref name="clr" scoped="" ref="0x2ad80232f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad80233ed60" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad80233ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80233d0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80233d260"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80233d3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80233d570"/>
        <function-ref name="get" scoped="" ref="0x2ad80233d6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80233d880"/>
        <function-ref name="set" scoped="" ref="0x2ad80233da08"/>
        <function-ref name="clr" scoped="" ref="0x2ad80233db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad8023325b8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad8023325b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802332908"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802332a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802332c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802332da0"/>
        <function-ref name="get" scoped="" ref="0x2ad802331020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023311a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802331330"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023314b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad80232fa50" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad80232fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80232fda0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80232d020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80232d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80232d330"/>
        <function-ref name="get" scoped="" ref="0x2ad80232d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80232d640"/>
        <function-ref name="set" scoped="" ref="0x2ad80232d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad80232d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad80233de18" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad80233de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80233c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80233c330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80233c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80233c640"/>
        <function-ref name="get" scoped="" ref="0x2ad80233c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80233c950"/>
        <function-ref name="set" scoped="" ref="0x2ad80233cad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad80233cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8031a9180" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8031a9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8031a94d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031a9658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8031a97e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031a9968"/>
        <function-ref name="get" scoped="" ref="0x2ad8031a9af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8031a9c78"/>
        <function-ref name="set" scoped="" ref="0x2ad8031a9e00"/>
        <function-ref name="clr" scoped="" ref="0x2ad8031a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8031a6100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8031a6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8031a6450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031a65d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8031a6760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031a68e8"/>
        <function-ref name="get" scoped="" ref="0x2ad8031a6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8031a6bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad8031a6d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad8031a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8031a3100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8031a3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8031a3450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031a35d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8031a3760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031a38e8"/>
        <function-ref name="get" scoped="" ref="0x2ad8031a3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8031a3bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad8031a3d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad8031a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8031a0100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8031a0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8031a0450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031a05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8031a0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031a08e8"/>
        <function-ref name="get" scoped="" ref="0x2ad8031a0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8031a0bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad8031a0d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad80319f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80319d100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80319d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80319d450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80319d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80319d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80319d8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad80319da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80319dbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad80319dd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad80319b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803199100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803199100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803199450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031995d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803199760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031998e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803199a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803199bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803199d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803198020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803196100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803196100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803196450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031965d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803196760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031968e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803196a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803196bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803196d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803195020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803193100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803193100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803193450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8031935d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803193760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8031938e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803193a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803193bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803193d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803192020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad802345120" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad802345120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802345470"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023455f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802345780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802345908"/>
        <function-ref name="get" scoped="" ref="0x2ad802345a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802345c18"/>
        <function-ref name="set" scoped="" ref="0x2ad802345da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad802344020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad8023425b8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad8023425b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802342908"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802342a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802342c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802342da0"/>
        <function-ref name="get" scoped="" ref="0x2ad802341020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023411a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802341330"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023414b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad802337e40" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad802337e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023361c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802336348"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023364d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802336658"/>
        <function-ref name="get" scoped="" ref="0x2ad8023367e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802336968"/>
        <function-ref name="set" scoped="" ref="0x2ad802336af0"/>
        <function-ref name="clr" scoped="" ref="0x2ad802336c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad8023442a8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad8023442a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023445f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802344780"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802344908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802344a90"/>
        <function-ref name="get" scoped="" ref="0x2ad802344c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802344da0"/>
        <function-ref name="set" scoped="" ref="0x2ad802343020"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad802341740" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad802341740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802341a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802341c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802341da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802340020"/>
        <function-ref name="get" scoped="" ref="0x2ad8023401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802340330"/>
        <function-ref name="set" scoped="" ref="0x2ad8023404b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802340640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad802347020" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad802347020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802347370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023474f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802347680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802347808"/>
        <function-ref name="get" scoped="" ref="0x2ad802347990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802347b18"/>
        <function-ref name="set" scoped="" ref="0x2ad802347ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad802347e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad802343430" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad802343430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802343780"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802343908"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802343a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802343c18"/>
        <function-ref name="get" scoped="" ref="0x2ad802343da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802342020"/>
        <function-ref name="set" scoped="" ref="0x2ad8023421a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802342330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad8023408c8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad8023408c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802340c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802340da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80233f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80233f1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad80233f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80233f4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad80233f640"/>
        <function-ref name="clr" scoped="" ref="0x2ad80233f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803225180" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803225180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8032254d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad803225658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8032257e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad803225968"/>
        <function-ref name="get" scoped="" ref="0x2ad803225af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803225c78"/>
        <function-ref name="set" scoped="" ref="0x2ad803225e00"/>
        <function-ref name="clr" scoped="" ref="0x2ad803224020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803222100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803222100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803222450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032225d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803222760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032228e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803222a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803222bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803222d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803221020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80321f100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80321f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80321f450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80321f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80321f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80321f8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad80321fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80321fbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad80321fd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad80321e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80321c100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80321c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80321c450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80321c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80321c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80321c8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad80321ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80321cbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad80321cd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad80321b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803219100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803219100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803219450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032195d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803219760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032198e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803219a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803219bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803219d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803218020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803216100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803216100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803216450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032165d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803216760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032168e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803216a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803216bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803216d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803214020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803212100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803212100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803212450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032125d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803212760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032128e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803212a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803212bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803212d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803211020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80320f100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80320f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80320f450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80320f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80320f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80320f8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad80320fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80320fbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad80320fd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad80320e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad802349bd8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad802349bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802348020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023481a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802348330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8023484b8"/>
        <function-ref name="get" scoped="" ref="0x2ad802348640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023487c8"/>
        <function-ref name="set" scoped="" ref="0x2ad802348950"/>
        <function-ref name="clr" scoped="" ref="0x2ad802348ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad802357020" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad802357020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802357370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023574f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802357680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802357808"/>
        <function-ref name="get" scoped="" ref="0x2ad802357990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802357b18"/>
        <function-ref name="set" scoped="" ref="0x2ad802357ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad802357e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad80234b930" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad80234b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80234bc80"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80234be08"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80234a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80234a1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad80234a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80234a4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad80234a640"/>
        <function-ref name="clr" scoped="" ref="0x2ad80234a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad802348d60" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad802348d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023590d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802359260"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023593e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802359570"/>
        <function-ref name="get" scoped="" ref="0x2ad8023596f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802359880"/>
        <function-ref name="set" scoped="" ref="0x2ad802359a08"/>
        <function-ref name="clr" scoped="" ref="0x2ad802359b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad802356120" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad802356120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802356470"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023565f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802356780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802356908"/>
        <function-ref name="get" scoped="" ref="0x2ad802356a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802356c18"/>
        <function-ref name="set" scoped="" ref="0x2ad802356da0"/>
        <function-ref name="clr" scoped="" ref="0x2ad802355020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad80234aa50" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad80234aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80234ada0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802349020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023491a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802349330"/>
        <function-ref name="get" scoped="" ref="0x2ad8023494b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802349640"/>
        <function-ref name="set" scoped="" ref="0x2ad8023497c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802349950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad802359e18" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad802359e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023581a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802358330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023584b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802358640"/>
        <function-ref name="get" scoped="" ref="0x2ad8023587c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802358950"/>
        <function-ref name="set" scoped="" ref="0x2ad802358ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802358c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad8023552a8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad8023552a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023555f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802355780"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802355908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802355a90"/>
        <function-ref name="get" scoped="" ref="0x2ad802355c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802355da0"/>
        <function-ref name="set" scoped="" ref="0x2ad802354020"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803259180" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803259180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8032594d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad803259658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8032597e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad803259968"/>
        <function-ref name="get" scoped="" ref="0x2ad803259af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803259c78"/>
        <function-ref name="set" scoped="" ref="0x2ad803259e00"/>
        <function-ref name="clr" scoped="" ref="0x2ad803258020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803256100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803256100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803256450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032565d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803256760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032568e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803256a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803256bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803256d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803255020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803253100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803253100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803253450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032535d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803253760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032538e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803253a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803253bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803253d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803252020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803250100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803250100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803250450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032505d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803250760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032508e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803250a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803250bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803250d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad80329d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80329b100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80329b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80329b450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80329b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80329b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80329b8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad80329ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80329bbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad80329bd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad80329a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803298100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803298100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803298450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032985d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803298760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032988e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803298a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803298bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803298d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803296020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803294100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803294100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803294450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032945d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803294760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032948e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803294a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803294bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803294d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803293020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad803291100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad803291100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad803291450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032915d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad803291760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032918e8"/>
        <function-ref name="get" scoped="" ref="0x2ad803291a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad803291bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad803291d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad803290020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ad80235e740" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ad80235e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80235ea90"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80235ec18"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80235eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80235d020"/>
        <function-ref name="get" scoped="" ref="0x2ad80235d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80235d330"/>
        <function-ref name="set" scoped="" ref="0x2ad80235d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad80235d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ad80235bbd8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ad80235bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80235a020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80235a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80235a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80235a4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad80235a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80235a7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad80235a950"/>
        <function-ref name="clr" scoped="" ref="0x2ad80235aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ad802360500" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ad802360500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802360850"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023609d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802360b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802360ce8"/>
        <function-ref name="get" scoped="" ref="0x2ad802360e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80235f020"/>
        <function-ref name="set" scoped="" ref="0x2ad80235f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad80235f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ad80235d8c8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ad80235d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80235dc18"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80235dda0"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80235c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80235c1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad80235c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80235c4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad80235c640"/>
        <function-ref name="clr" scoped="" ref="0x2ad80235c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ad80235ad60" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ad80235ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80236a0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80236a260"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80236a3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80236a570"/>
        <function-ref name="get" scoped="" ref="0x2ad80236a6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80236a880"/>
        <function-ref name="set" scoped="" ref="0x2ad80236aa08"/>
        <function-ref name="clr" scoped="" ref="0x2ad80236ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ad80235f5b8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ad80235f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80235f908"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80235fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80235fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80235fda0"/>
        <function-ref name="get" scoped="" ref="0x2ad80235e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80235e1a8"/>
        <function-ref name="set" scoped="" ref="0x2ad80235e330"/>
        <function-ref name="clr" scoped="" ref="0x2ad80235e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ad80235ca50" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ad80235ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80235cda0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80235b020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80235b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80235b330"/>
        <function-ref name="get" scoped="" ref="0x2ad80235b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80235b640"/>
        <function-ref name="set" scoped="" ref="0x2ad80235b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad80235b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ad80236ae18" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ad80236ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023691a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802369330"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023694b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802369640"/>
        <function-ref name="get" scoped="" ref="0x2ad8023697c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802369950"/>
        <function-ref name="set" scoped="" ref="0x2ad802369ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802369c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8032df180" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8032df180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8032df4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032df658"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8032df7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032df968"/>
        <function-ref name="get" scoped="" ref="0x2ad8032dfaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8032dfc78"/>
        <function-ref name="set" scoped="" ref="0x2ad8032dfe00"/>
        <function-ref name="clr" scoped="" ref="0x2ad8032de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8032dc100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8032dc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8032dc450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032dc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8032dc760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032dc8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad8032dca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8032dcbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad8032dcd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad8032db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8032d9100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8032d9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8032d9450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032d95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8032d9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032d98e8"/>
        <function-ref name="get" scoped="" ref="0x2ad8032d9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8032d9bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad8032d9d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad8032d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8032d6100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8032d6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8032d6450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032d65d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8032d6760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032d68e8"/>
        <function-ref name="get" scoped="" ref="0x2ad8032d6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8032d6bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad8032d6d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad8032d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8032d3100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8032d3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8032d3450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032d35d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8032d3760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032d38e8"/>
        <function-ref name="get" scoped="" ref="0x2ad8032d3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8032d3bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad8032d3d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad8032d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8032d0100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8032d0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8032d0450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032d05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8032d0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032d08e8"/>
        <function-ref name="get" scoped="" ref="0x2ad8032d0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8032d0bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad8032d0d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad8032cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8032cd100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8032cd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8032cd450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032cd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8032cd760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032cd8e8"/>
        <function-ref name="get" scoped="" ref="0x2ad8032cda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8032cdbf8"/>
        <function-ref name="set" scoped="" ref="0x2ad8032cdd80"/>
        <function-ref name="clr" scoped="" ref="0x2ad8032cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8032c9100" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8032c9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8032c9450"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8032c95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8032c9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8032c98e8"/>
        <function-ref name="get" scoped="" ref="0x2ad8032c9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8032c9bf8"/>
        <function-ref name="set" scoped="" ref="0x2ad8032c9d80"/>
        <function-ref name="clr" scoped="" ref="0x2ad8032c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8023633e0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8023633e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802363730"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023638b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802363a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802363bc8"/>
        <function-ref name="get" scoped="" ref="0x2ad802363d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802382020"/>
        <function-ref name="set" scoped="" ref="0x2ad8023821a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802382330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80237fc38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80237fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80238f020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80238f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80238f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80238f4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad80238f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80238f7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad80238f950"/>
        <function-ref name="clr" scoped="" ref="0x2ad80238fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80238b3e0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80238b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80238b730"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80238b8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80238ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80238bbc8"/>
        <function-ref name="get" scoped="" ref="0x2ad80238bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80238a020"/>
        <function-ref name="set" scoped="" ref="0x2ad80238a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad80238a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad802398c38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad802398c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802397020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023971a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802397330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8023974b8"/>
        <function-ref name="get" scoped="" ref="0x2ad802397640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023977c8"/>
        <function-ref name="set" scoped="" ref="0x2ad802397950"/>
        <function-ref name="clr" scoped="" ref="0x2ad802397ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8023933e0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8023933e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802393730"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023938b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802393a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802393bc8"/>
        <function-ref name="get" scoped="" ref="0x2ad802393d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802391020"/>
        <function-ref name="set" scoped="" ref="0x2ad8023911a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802391330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8023a0c38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8023a0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80239f020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80239f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80239f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80239f4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad80239f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80239f7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad80239f950"/>
        <function-ref name="clr" scoped="" ref="0x2ad80239fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad80239a480" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad80239a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80239a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80239a958"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80239aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80239ac68"/>
        <function-ref name="get" scoped="" ref="0x2ad80239adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802399020"/>
        <function-ref name="set" scoped="" ref="0x2ad8023991a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802399330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8023a9c38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8023a9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023a8020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023a81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023a8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8023a84b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8023a8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023a87c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8023a8950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023a8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8023a3520" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8023a3520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023a3870"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023a39f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023a3b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8023a3d08"/>
        <function-ref name="get" scoped="" ref="0x2ad8023a2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023a21a8"/>
        <function-ref name="set" scoped="" ref="0x2ad8023a2330"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023a24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8023b2cd8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8023b2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023b10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023b1228"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023b13b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8023b1538"/>
        <function-ref name="get" scoped="" ref="0x2ad8023b16c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023b1848"/>
        <function-ref name="set" scoped="" ref="0x2ad8023b19d0"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023b1b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8023ad3e0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8023ad3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023ad730"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023ad8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023ada40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8023adbc8"/>
        <function-ref name="get" scoped="" ref="0x2ad8023add50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023ac020"/>
        <function-ref name="set" scoped="" ref="0x2ad8023ac1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023ac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8023bcc38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8023bcc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023bb020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023bb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023bb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8023bb4b8"/>
        <function-ref name="get" scoped="" ref="0x2ad8023bb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023bb7c8"/>
        <function-ref name="set" scoped="" ref="0x2ad8023bb950"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023bbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ad8023b63e0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ad8023b63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8023b6730"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8023b68b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8023b6a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8023b6bc8"/>
        <function-ref name="get" scoped="" ref="0x2ad8023b6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8023c9020"/>
        <function-ref name="set" scoped="" ref="0x2ad8023c91a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad8023c9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad8023f6af8" loc="50:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad8023f6af8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ad8021526f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ad8021526f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad8023f6e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ad8023f5158" loc="51:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ad8023f5158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ad8023f54a8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ad8023f5630"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ad8023f57b8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ad8023f5940"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ad8023f5ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ad802413a60" loc="49:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802413a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802413db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ad802414278" loc="46:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ad802414278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ad8024145c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ad802413398" loc="48:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad802413398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad8024136e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ad8024148b0" loc="47:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ad8024148b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802414c00"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ad802414d88"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ad802413020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ad80215a728" loc="37:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ad80215a728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad80215aa78"/>
        <function-ref name="runTask" scoped="" ref="0x2ad80215ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ad80214fbe8" loc="36:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ad80214fbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802151020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ad8021511a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ad802151330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ad8022273c8" loc="45:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ad8022273c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad802227718"/>
        <function-ref name="runTask" scoped="" ref="0x2ad8022278a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ad802224918" loc="46:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ad802224918"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ad802224c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ad802228500" loc="44:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ad802228500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802228850"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ad8022289d8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ad802228b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ad80224c8e0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad80224c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ad80224cc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ad802243698" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ad802243698"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ad8022439e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ad802240b08" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ad802240b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ad802240e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2ad8024ace80" loc="10:PullC.nc">
      <component-ref qname="PullC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2ad8024ace80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad8024a11f8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad8024a1380"/>
        <function-ref name="start" scoped="" ref="0x2ad8024a1508"/>
        <function-ref name="stop" scoped="" ref="0x2ad8024a1690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ad802268d50" loc="6:PullC.nc">
      <component-ref qname="PullC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ad802268d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ad80241d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ad80249b900" loc="7:PullC.nc">
      <component-ref qname="PullC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad80249b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80249bc50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad80249bdd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad80241c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80241c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad80241c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ad802486020" loc="9:PullC.nc">
      <component-ref qname="PullC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad802486020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802486370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad8024864f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802486680"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802486808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802486990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2ad8024be4b0" loc="11:PullC.nc">
      <component-ref qname="PullC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad8024be4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8024be800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ad8024b0080" loc="12:PullC.nc">
      <component-ref qname="PullC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad8024b0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad8024b03d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad8024b0558"/>
        <function-ref name="led1On" scoped="" ref="0x2ad8024b06e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad8024b0868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad8024b09f0"/>
        <function-ref name="get" scoped="" ref="0x2ad8024b0b78"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad8024b0d00"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad8024ab4b8"/>
        <function-ref name="set" scoped="" ref="0x2ad8024ab020"/>
        <function-ref name="led0On" scoped="" ref="0x2ad8024ab1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2ad8024ab330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad8024a20f0" loc="8:PullC.nc">
      <component-ref qname="PullC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad8024a20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad8024a2440"/>
        <function-ref name="source" scoped="" ref="0x2ad8024a25c8"/>
        <function-ref name="address" scoped="" ref="0x2ad8024a2750"/>
        <function-ref name="destination" scoped="" ref="0x2ad8024a28d8"/>
        <function-ref name="setSource" scoped="" ref="0x2ad8024a2a60"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad8024a2be8"/>
        <function-ref name="type" scoped="" ref="0x2ad8024a2d70"/>
        <function-ref name="setType" scoped="" ref="0x2ad80241b020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad80241b1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad80241b330"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad80241b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad80241ebd8" loc="30:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad80241ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad8024cf020"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad8024cf1a8"/>
        <function-ref name="start" scoped="" ref="0x2ad8024cf330"/>
        <function-ref name="stop" scoped="" ref="0x2ad8024cf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad8024f1758" loc="47:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad8024f1758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad8024f0c58"/>
        <function-ref name="clear" scoped="" ref="0x2ad802507380"/>
        <function-ref name="isValid" scoped="" ref="0x2ad8024f0578"/>
        <function-ref name="set" scoped="" ref="0x2ad802507a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ad8024e1e28" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ad8024e1e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ad8024e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad8024cfc30" loc="32:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad8024cfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad8024ce020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad8024ce1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8024ce330"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8024ce4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad8024ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad8024cd968" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ad8024cd968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8024cdcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad8024e3430" loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad8024e3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8024e3780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8024e3908"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad8024e3a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8024e3c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8024e3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad8024eb848" loc="41:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad8024eb848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad8024ebb98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad8024ebd20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad8024de020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad8024de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad8024cedc0" loc="33:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad8024cedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8024cd170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad8024d80d0" loc="40:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8024d80d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad8024d8420"/>
        <function-ref name="noAck" scoped="" ref="0x2ad8024d85a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad8024d8730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ad8024e4828" loc="43:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ad8024e4828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ad8024e4b78"/>
        <function-ref name="setRetries" scoped="" ref="0x2ad8024e4d00"/>
        <function-ref name="getRetries" scoped="" ref="0x2ad8024dd020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ad8024dd1a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ad8024dd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad8024e2080" loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad8024e2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad8024e23d0"/>
        <function-ref name="source" scoped="" ref="0x2ad8024e2558"/>
        <function-ref name="address" scoped="" ref="0x2ad8024e26e0"/>
        <function-ref name="destination" scoped="" ref="0x2ad8024e2868"/>
        <function-ref name="setSource" scoped="" ref="0x2ad8024e29f0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad8024e2b78"/>
        <function-ref name="type" scoped="" ref="0x2ad8024e2d00"/>
        <function-ref name="setType" scoped="" ref="0x2ad8024e0020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad8024e01a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad8024e0330"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad8024e04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2ad8024f28c0" loc="46:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2ad8024f28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad8024ead40"/>
        <function-ref name="clear" scoped="" ref="0x2ad8024fa458"/>
        <function-ref name="isValid" scoped="" ref="0x2ad8024ea660"/>
        <function-ref name="set" scoped="" ref="0x2ad8024fab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad802505c28" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad802505c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad802502020"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad8025021a8"/>
        <function-ref name="start" scoped="" ref="0x2ad802502330"/>
        <function-ref name="stop" scoped="" ref="0x2ad8025024b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2ad80251c4e0" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2ad80251c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80251baa8"/>
        <function-ref name="get" scoped="" ref="0x2ad80251b598"/>
        <function-ref name="isSet" scoped="" ref="0x2ad80251b088"/>
        <function-ref name="set" scoped="" ref="0x2ad802519020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ad8024ff498" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ad8024ff498"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ad8024ff7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad8024ffa70" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad8024ffa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8024ffdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8024fd020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad8024fd1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8024fd330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8024fd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad802502c30" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad802502c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802501020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad8025011a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802501330"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8025014b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802501640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad802500968" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ad802500968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802500cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2ad80251f060" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ad80251f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80251e780"/>
        <function-ref name="get" scoped="" ref="0x2ad80251e270"/>
        <function-ref name="isSet" scoped="" ref="0x2ad80251fce0"/>
        <function-ref name="set" scoped="" ref="0x2ad80251ec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad8025137b0" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad8025137b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad802513b00"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad802513c88"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad802513e10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad802512020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad802501dc0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad802501dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802500170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2ad802517020" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802517020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad802514478"/>
        <function-ref name="clear" scoped="" ref="0x2ad802514b58"/>
        <function-ref name="isValid" scoped="" ref="0x2ad802517d70"/>
        <function-ref name="set" scoped="" ref="0x2ad80252c278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2ad802516ba0" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802516ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802518760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2ad802509cb0" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ad802509cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8025082a8"/>
        <function-ref name="get" scoped="" ref="0x2ad80250fd68"/>
        <function-ref name="isSet" scoped="" ref="0x2ad80250f858"/>
        <function-ref name="set" scoped="" ref="0x2ad8025087b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad8024fce00" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8024fce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad8025131a8"/>
        <function-ref name="noAck" scoped="" ref="0x2ad802513330"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad8025134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ad8025122d0" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ad8025122d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ad802512620"/>
        <function-ref name="setRetries" scoped="" ref="0x2ad8025127a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2ad802512930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ad802512ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ad802512c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad8024fd758" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad8024fd758"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad8024fdaa8"/>
        <function-ref name="source" scoped="" ref="0x2ad8024fdc30"/>
        <function-ref name="address" scoped="" ref="0x2ad8024fddb8"/>
        <function-ref name="destination" scoped="" ref="0x2ad8024fc020"/>
        <function-ref name="setSource" scoped="" ref="0x2ad8024fc1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad8024fc330"/>
        <function-ref name="type" scoped="" ref="0x2ad8024fc4b8"/>
        <function-ref name="setType" scoped="" ref="0x2ad8024fc640"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad8024fc7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad8024fc950"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad8024fcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2ad80250ed28" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2ad80250ed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2ad8025100a0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802510228"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad8025103b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad80252ce48" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad80252ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad802529300"/>
        <function-ref name="clear" scoped="" ref="0x2ad8025299e0"/>
        <function-ref name="isValid" scoped="" ref="0x2ad80252bbe8"/>
        <function-ref name="set" scoped="" ref="0x2ad8025280f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad802525180" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad802525180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad8025254d0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad802525658"/>
        <function-ref name="start" scoped="" ref="0x2ad8025257e0"/>
        <function-ref name="stop" scoped="" ref="0x2ad802525968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2ad80254a600" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2ad80254a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802549bf0"/>
        <function-ref name="get" scoped="" ref="0x2ad8025496e0"/>
        <function-ref name="isSet" scoped="" ref="0x2ad8025491d0"/>
        <function-ref name="set" scoped="" ref="0x2ad802548130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2ad802536218" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2ad802536218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ad802536568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2ad80252e208" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2ad80252e208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad80252e558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad80252e6e0"/>
        <function-ref name="request" scoped="" ref="0x2ad80252e868"/>
        <function-ref name="granted" scoped="" ref="0x2ad80252e9f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad80252eb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ad802521978" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ad802521978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ad802521cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad8025241c8" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad8025241c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802524518"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad8025246a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802524828"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8025249b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802524b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad802522e48" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ad802522e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8025211c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2ad802542020" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad802542020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2ad802542370"/>
        <function-ref name="address" scoped="" ref="0x2ad8025424f8"/>
        <function-ref name="destination" scoped="" ref="0x2ad802542680"/>
        <function-ref name="setSource" scoped="" ref="0x2ad802542808"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad802542990"/>
        <function-ref name="pan" scoped="" ref="0x2ad802542b18"/>
        <function-ref name="setPan" scoped="" ref="0x2ad802542ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad802542e28"/>
        <function-ref name="localPan" scoped="" ref="0x2ad802541020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2ad8025413d0" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2ad8025413d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802541820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8025419a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad802541b30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802541cb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802541e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad802553af8" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad802553af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad802553e48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad802552020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad8025521a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad802552330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2ad80254d2d0" loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ad80254d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80254c898"/>
        <function-ref name="get" scoped="" ref="0x2ad80254c388"/>
        <function-ref name="isSet" scoped="" ref="0x2ad80254de50"/>
        <function-ref name="set" scoped="" ref="0x2ad80254cda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad802522300" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad802522300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802522650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2ad8025396d8" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2ad8025396d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802539a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802539bb0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad802539d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802538020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8025381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2ad802560d08" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802560d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad80255e1f0"/>
        <function-ref name="clear" scoped="" ref="0x2ad80255e8d0"/>
        <function-ref name="isValid" scoped="" ref="0x2ad80255fac0"/>
        <function-ref name="set" scoped="" ref="0x2ad80255d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2ad802548938" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802548938"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad8025604e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2ad802551e40" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ad802551e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80254f530"/>
        <function-ref name="get" scoped="" ref="0x2ad80254f020"/>
        <function-ref name="isSet" scoped="" ref="0x2ad802550a18"/>
        <function-ref name="set" scoped="" ref="0x2ad80254fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad8025531a0" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8025531a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad8025534f0"/>
        <function-ref name="noAck" scoped="" ref="0x2ad802553678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad802553800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2ad802530d80" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2ad802530d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802537170"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad8025372f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802537480"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802537608"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802537790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ad8025525e0" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ad8025525e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ad802552930"/>
        <function-ref name="setRetries" scoped="" ref="0x2ad802552ab8"/>
        <function-ref name="getRetries" scoped="" ref="0x2ad802552c40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ad802552dc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ad802551020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad802520020" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad802520020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad802520370"/>
        <function-ref name="source" scoped="" ref="0x2ad8025204f8"/>
        <function-ref name="address" scoped="" ref="0x2ad802520680"/>
        <function-ref name="destination" scoped="" ref="0x2ad802520808"/>
        <function-ref name="setSource" scoped="" ref="0x2ad802520990"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad802520b18"/>
        <function-ref name="type" scoped="" ref="0x2ad802520ca0"/>
        <function-ref name="setType" scoped="" ref="0x2ad802520e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad802539020"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad8025391a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad802539330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2ad802537af0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2ad802537af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802537e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2ad8025512e8" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2ad8025512e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2ad802551638"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad8025517c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802551948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad80255dbf0" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad80255dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad80255a088"/>
        <function-ref name="clear" scoped="" ref="0x2ad80255a768"/>
        <function-ref name="isValid" scoped="" ref="0x2ad80255b970"/>
        <function-ref name="set" scoped="" ref="0x2ad80255ae48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2ad80258d608" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2ad80258d608"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ad80258d958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2ad802586600" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2ad802586600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x2ad8025784b8"/>
        <function-ref name="channelError" scoped="" ref="0x2ad802586ad8"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x2ad802586c60"/>
        <function-ref name="getChannelTime" scoped="" ref="0x2ad802586de8"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x2ad802578020"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x2ad8025781a8"/>
        <function-ref name="getSender" scoped="" ref="0x2ad802578330"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x2ad802586950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2ad80258fa60" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2ad80258fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad80258fdb0"/>
        <function-ref name="checkFrame" scoped="" ref="0x2ad802580020"/>
        <function-ref name="source" scoped="" ref="0x2ad8025801a8"/>
        <function-ref name="destination" scoped="" ref="0x2ad802580330"/>
        <function-ref name="setSource" scoped="" ref="0x2ad8025804b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad802580640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad8025807c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2ad80257d950" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2ad80257d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2ad80257dca0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2ad80257de28"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2ad802585020"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2ad8025851a8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2ad802585330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2ad8025a9020" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ad8025a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad8025a9370"/>
        <function-ref name="wait" scoped="" ref="0x2ad8025a94f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8025a9680"/>
        <function-ref name="isFree" scoped="" ref="0x2ad8025a9808"/>
        <function-ref name="getNow" scoped="" ref="0x2ad8025a9990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2ad8025a8150" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2ad8025a8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8025a84a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8025a8628"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8025a87b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8025a8938"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad8025a8ac0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad8025a8c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ad8025a4268" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad8025a4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad8025ba7d8"/>
        <function-ref name="clear" scoped="" ref="0x2ad8025b9020"/>
        <function-ref name="isValid" scoped="" ref="0x2ad8025ba0f8"/>
        <function-ref name="set" scoped="" ref="0x2ad8025b9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2ad8025695b0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2ad8025695b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802569900"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802569a88"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802569c10"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2ad802569d98"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2ad802554020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2ad8025723a8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2ad8025723a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2ad8025726f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2ad80257a368" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2ad80257a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2ad80257a6b8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2ad80257a840"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ad80257a9c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2ad80257ab50"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2ad80257acd8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2ad80257ae60"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ad80256d020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ad80256d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2ad8025ab8c0" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ad8025ab8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2ad8025abc10"/>
        <function-ref name="getFramePending" scoped="" ref="0x2ad8025aa020"/>
        <function-ref name="setFCF" scoped="" ref="0x2ad80257b020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2ad80257b1a8"/>
        <function-ref name="getDSN" scoped="" ref="0x2ad80257b330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2ad80257b4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2ad80257b640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2ad80257b7c8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2ad80257b950"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2ad80257bad8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2ad80257bc60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2ad80257bde8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2ad80258e020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ad80258e2a8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2ad80258e430"/>
        <function-ref name="setFramePending" scoped="" ref="0x2ad80258e5b8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2ad80258e740"/>
        <function-ref name="setDestPan" scoped="" ref="0x2ad80258e8c8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ad80258ea50"/>
        <function-ref name="getFCF" scoped="" ref="0x2ad80258ebd8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ad8025abd98"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2ad80258ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2ad8025758d8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2ad8025758d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ad802575c28"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2ad802575db0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ad802579020"/>
        <function-ref name="getSender" scoped="" ref="0x2ad8025791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2ad8025815a8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2ad8025815a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2ad8025818f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2ad802581a80"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2ad802581c08"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2ad802581d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2ad80261f020" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ad80261f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad80261f370"/>
        <function-ref name="wait" scoped="" ref="0x2ad80261f4f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80261f680"/>
        <function-ref name="isFree" scoped="" ref="0x2ad80261f808"/>
        <function-ref name="getNow" scoped="" ref="0x2ad80261f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ad80261e288" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad80261e288"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ad8021526f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ad8021526f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad802615918"/>
        <function-ref name="fired" scoped="" ref="0x2ad80261d980"/>
        <function-ref name="startAt" scoped="" ref="0x2ad802615310"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad80261de08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad802615da0"/>
        <function-ref name="start" scoped="" ref="0x2ad80261d020"/>
        <function-ref name="stop" scoped="" ref="0x2ad80261d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2ad80262e020" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ad80262e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad80262e370"/>
        <function-ref name="wait" scoped="" ref="0x2ad80262e4f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80262e680"/>
        <function-ref name="isFree" scoped="" ref="0x2ad80262e808"/>
        <function-ref name="getNow" scoped="" ref="0x2ad80262e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ad80262c020" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad80262c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad80262a690"/>
        <function-ref name="fired" scoped="" ref="0x2ad80262b6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ad80262a088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad80262bb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad80262ab18"/>
        <function-ref name="start" scoped="" ref="0x2ad80262cd70"/>
        <function-ref name="stop" scoped="" ref="0x2ad80262b270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2ad8026246a0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2ad8026246a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2ad8026249f0"/>
        <function-ref name="suspend" scoped="" ref="0x2ad802624b78"/>
        <function-ref name="resume" scoped="" ref="0x2ad802624d00"/>
        <function-ref name="run" scoped="" ref="0x2ad802627020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2ad802613e50" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2ad802613e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2ad8026311e8"/>
        <function-ref name="suspend" scoped="" ref="0x2ad802631370"/>
        <function-ref name="resume" scoped="" ref="0x2ad8026314f8"/>
        <function-ref name="run" scoped="" ref="0x2ad802631680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802654890" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802654890"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802654be0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802654d68"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802657020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad802651320" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad802651320"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802651670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ad80265a978" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ad80265a978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ad80265acc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad802640020" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad802640020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802640370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8026404f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad802640680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802640808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802640990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad80263f1c8" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad80263f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad80263f518"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad80263f6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80263f828"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80263f9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80263fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad80263ee48" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ad80263ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad80265a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad802659120" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad802659120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802659470"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8026595f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802659780"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802659908"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802659a90"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802659c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ad8026519f8" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ad8026519f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad802651d48"/>
        <function-ref name="checkFrame" scoped="" ref="0x2ad802653020"/>
        <function-ref name="source" scoped="" ref="0x2ad8026531a8"/>
        <function-ref name="destination" scoped="" ref="0x2ad802653330"/>
        <function-ref name="setSource" scoped="" ref="0x2ad8026534b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad802653640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad8026537c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad80263e300" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad80263e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad80263e650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad802632920" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad802632920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad802632c70"/>
        <function-ref name="source" scoped="" ref="0x2ad802632df8"/>
        <function-ref name="address" scoped="" ref="0x2ad802641020"/>
        <function-ref name="destination" scoped="" ref="0x2ad8026411a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ad802641330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad8026414b8"/>
        <function-ref name="type" scoped="" ref="0x2ad802641640"/>
        <function-ref name="setType" scoped="" ref="0x2ad8026417c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad802641950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad802641ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad802641c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802664968" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802664968"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802664cb8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802664e40"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802663020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad802663380" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad802663380"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8026636d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ad802665348" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ad802665348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ad802665698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad80266a8c8" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad80266a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80266ac18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad80266ada0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad802669020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8026691a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802669330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad8026523e0" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad8026523e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802652730"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8026528b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802652a40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802652bc8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802652d50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad80264d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad802669aa8" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad802669aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802669df8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad802668020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8026681a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802668330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad8026684b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ad802667818" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ad802667818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802667b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad802665a90" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad802665a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802665de0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802664020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8026641a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802664330"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad8026644b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802664640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad802668c38" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad802668c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802667020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ad802663a58" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ad802663a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad802663da8"/>
        <function-ref name="checkFrame" scoped="" ref="0x2ad802662020"/>
        <function-ref name="source" scoped="" ref="0x2ad8026621a8"/>
        <function-ref name="destination" scoped="" ref="0x2ad802662330"/>
        <function-ref name="setSource" scoped="" ref="0x2ad8026624b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad802662640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad8026627c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ad80265d3f0" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad80265d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ad80265d740"/>
        <function-ref name="changed" scoped="" ref="0x2ad80265d8c8"/>
        <function-ref name="amGroup" scoped="" ref="0x2ad80265da50"/>
        <function-ref name="setAddress" scoped="" ref="0x2ad80265dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad80264d2c0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad80264d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad80264d610"/>
        <function-ref name="source" scoped="" ref="0x2ad80264d798"/>
        <function-ref name="address" scoped="" ref="0x2ad80264d920"/>
        <function-ref name="destination" scoped="" ref="0x2ad80264daa8"/>
        <function-ref name="setSource" scoped="" ref="0x2ad80264dc30"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad80264ddb8"/>
        <function-ref name="type" scoped="" ref="0x2ad80266a020"/>
        <function-ref name="setType" scoped="" ref="0x2ad80266a1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad80266a330"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad80266a4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad80266a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2ad8026c2e58" loc="43:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad8026c2e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ad8026be1e8"/>
        <function-ref name="changed" scoped="" ref="0x2ad8026be370"/>
        <function-ref name="amGroup" scoped="" ref="0x2ad8026be4f8"/>
        <function-ref name="setAddress" scoped="" ref="0x2ad8026be680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad8026c8a48" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad8026c8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad8026c8d98"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8026d9020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad8026d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ad8026d93f0" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad8026d93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad8026d9740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad8026d98c8"/>
        <function-ref name="request" scoped="" ref="0x2ad8026d9a50"/>
        <function-ref name="granted" scoped="" ref="0x2ad8026d9bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad8026d9d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ad8026c8100" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2ad8026c8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad8026c8450"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8026c85d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad8026c8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad802739020" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad802739020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad802739390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad802739518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad802738020" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad802738020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad802738390"/>
        <function-ref name="configure" scoped="" ref="0x2ad802738518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad80273a200" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad80273a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad80273a570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad80273a6f8"/>
        <function-ref name="request" scoped="" ref="0x2ad80273a880"/>
        <function-ref name="granted" scoped="" ref="0x2ad80273aa08"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad80273ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad802739760" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad802739760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad802739ab0"/>
        <function-ref name="userId" scoped="" ref="0x2ad802739c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad8033daaa0" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad8033daaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad8033dadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ad8033d90a0" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2ad8033d90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad8033d93f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad8033d9578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad8033d9700"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad8033d9888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad8033d7af8" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad8033d7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad8033d7e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad8033d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad8033d6b08" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad8033d6b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad8033d6e78"/>
        <function-ref name="configure" scoped="" ref="0x2ad8033d4030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad8033d42b8" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ad8033d42b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad8033d4608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad8033d4790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad8033d4918"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad8033d4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad8033d8dd8" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad8033d8dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad8033d7170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad8033d72f8"/>
        <function-ref name="request" scoped="" ref="0x2ad8033d7480"/>
        <function-ref name="granted" scoped="" ref="0x2ad8033d7608"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad8033d7790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad8033d6268" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad8033d6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad8033d65b8"/>
        <function-ref name="userId" scoped="" ref="0x2ad8033d6740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad8033d4d68" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ad8033d4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad8033d30f0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad8033d3278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad80274f020" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad80274f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad80274f370"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80274f4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80274f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad80274f9e0" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad80274f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad80274fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ad802755ca8" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ad802755ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ad802754020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad802759b98" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad802759b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802756020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8027561a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad802756330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8027564b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802756640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Packet" ref="0x2ad802752da8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad802752da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2ad802751170"/>
        <function-ref name="address" scoped="" ref="0x2ad8027512f8"/>
        <function-ref name="destination" scoped="" ref="0x2ad802751480"/>
        <function-ref name="setSource" scoped="" ref="0x2ad802751608"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad802751790"/>
        <function-ref name="pan" scoped="" ref="0x2ad802751918"/>
        <function-ref name="setPan" scoped="" ref="0x2ad802751aa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad802751c28"/>
        <function-ref name="localPan" scoped="" ref="0x2ad802751db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2ad8027500c0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad8027500c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802750410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802750598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802750720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8027508a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802750a30"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802750bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2ad8027543c0" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ad8027543c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2ad802754710"/>
        <function-ref name="getFramePending" scoped="" ref="0x2ad802752ad8"/>
        <function-ref name="setFCF" scoped="" ref="0x2ad802754a20"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2ad802754ba8"/>
        <function-ref name="getDSN" scoped="" ref="0x2ad802754d30"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2ad802753020"/>
        <function-ref name="setDSN" scoped="" ref="0x2ad8027531a8"/>
        <function-ref name="createAckReply" scoped="" ref="0x2ad802753330"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2ad8027534b8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2ad802753640"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2ad8027537c8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2ad802753950"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2ad802753ad8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ad802753d60"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2ad802752020"/>
        <function-ref name="setFramePending" scoped="" ref="0x2ad8027521a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2ad802752330"/>
        <function-ref name="setDestPan" scoped="" ref="0x2ad8027524b8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ad802752640"/>
        <function-ref name="getFCF" scoped="" ref="0x2ad8027527c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ad802754898"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2ad802752950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2ad8027568f8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2ad8027568f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802756c48"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad802756dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802755020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8027551a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802755330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2ad802755690" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2ad802755690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8027559e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad8027873e8" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad8027873e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802787738"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8027878c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802787a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad802787da8" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad802787da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802785170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2ad80278a3a0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad80278a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80278a6f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad80278a878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80278aa00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad80278ab88"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad80278ad10"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802789020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2ad802789d48" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2ad802789d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8027880d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad8027854c8" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad8027854c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802785818"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8027859a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802785b28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802785cb0"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802785e38"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802784020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2ad802789368" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2ad802789368"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad8027896b8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802789840"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad8027899c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2ad80278b170" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2ad80278b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad80278b4c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80278b648"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80278b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2ad80278bb58" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2ad80278bb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad80278a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2ad802788450" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2ad802788450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8027887a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802788928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802788ab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802788c38"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802788dc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802787020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2ad8027c0da8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad8027c0da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2ad8027bf170"/>
        <function-ref name="address" scoped="" ref="0x2ad8027bf2f8"/>
        <function-ref name="destination" scoped="" ref="0x2ad8027bf480"/>
        <function-ref name="setSource" scoped="" ref="0x2ad8027bf608"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad8027bf790"/>
        <function-ref name="pan" scoped="" ref="0x2ad8027bf918"/>
        <function-ref name="setPan" scoped="" ref="0x2ad8027bfaa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad8027bfc28"/>
        <function-ref name="localPan" scoped="" ref="0x2ad8027bfdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad8027be0c0" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad8027be0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8027be410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8027be598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8027be720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8027be8a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad8027bea30"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad8027bebb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2ad8027a0408" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ad8027a0408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2ad8027a0758"/>
        <function-ref name="getFramePending" scoped="" ref="0x2ad8027c0ad8"/>
        <function-ref name="setFCF" scoped="" ref="0x2ad8027a0a68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2ad8027a0bf0"/>
        <function-ref name="getDSN" scoped="" ref="0x2ad8027a0d78"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2ad8027c1020"/>
        <function-ref name="setDSN" scoped="" ref="0x2ad8027c11a8"/>
        <function-ref name="createAckReply" scoped="" ref="0x2ad8027c1330"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2ad8027c14b8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2ad8027c1640"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2ad8027c17c8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2ad8027c1950"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2ad8027c1ad8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ad8027c1d60"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2ad8027c0020"/>
        <function-ref name="setFramePending" scoped="" ref="0x2ad8027c01a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2ad8027c0330"/>
        <function-ref name="setDestPan" scoped="" ref="0x2ad8027c04b8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ad8027c0640"/>
        <function-ref name="getFCF" scoped="" ref="0x2ad8027c07c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ad8027a08e0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2ad8027c0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad8027bd020" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad8027bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8027bd370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8027bd4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8027bd680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8027bd808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad8027bd990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad8027bdb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2ad8027b7080" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2ad8027b7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2ad8027b73d0"/>
        <function-ref name="address" scoped="" ref="0x2ad8027b7558"/>
        <function-ref name="destination" scoped="" ref="0x2ad8027b76e0"/>
        <function-ref name="setSource" scoped="" ref="0x2ad8027b7868"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad8027b79f0"/>
        <function-ref name="pan" scoped="" ref="0x2ad8027b7b78"/>
        <function-ref name="setPan" scoped="" ref="0x2ad8027b7d00"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad8027b6020"/>
        <function-ref name="localPan" scoped="" ref="0x2ad8027b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad8027b6460" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad8027b6460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8027b67b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8027b6938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8027b6ac0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8027b6c48"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad8027b6dd0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad8027b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2ad8027bc778" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ad8027bc778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2ad8027bcac8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2ad8027b8d60"/>
        <function-ref name="setFCF" scoped="" ref="0x2ad8027bcdd8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2ad8027b9020"/>
        <function-ref name="getDSN" scoped="" ref="0x2ad8027b91a8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2ad8027b9330"/>
        <function-ref name="setDSN" scoped="" ref="0x2ad8027b94b8"/>
        <function-ref name="createAckReply" scoped="" ref="0x2ad8027b9640"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2ad8027b97c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2ad8027b9950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2ad8027b9ad8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2ad8027b9c60"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2ad8027b9de8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ad8027b8120"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2ad8027b82a8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2ad8027b8430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2ad8027b85b8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2ad8027b8740"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ad8027b88c8"/>
        <function-ref name="getFCF" scoped="" ref="0x2ad8027b8a50"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ad8027bcc50"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2ad8027b8bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ad8027b53d8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ad8027b53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ad8027b5728"/>
        <function-ref name="changed" scoped="" ref="0x2ad8027b58b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2ad8027b5a38"/>
        <function-ref name="setAddress" scoped="" ref="0x2ad8027b5bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad8027b4020" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad8027b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8027b4370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8027b44f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8027b4680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8027b4808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad8027b4990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad8027b4b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad80281ec80" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad80281ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802821020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8028211a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802821330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad8028216a0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad8028216a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8028219f0"/>
        <function-ref name="header" scoped="" ref="0x2ad802821b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad802825de8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad802825de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802822170"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8028222f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802822480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ad802820020" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ad802820020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ad802820370"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2ad8028204f8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ad802820680"/>
        <function-ref name="getSender" scoped="" ref="0x2ad802820808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ad80281e3e0" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad80281e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad80281e730"/>
        <function-ref name="header" scoped="" ref="0x2ad80281e8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802840bf0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802840bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad80283f020"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80283f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80283f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad80283f6a0" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad80283f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad80283f9f0"/>
        <function-ref name="header" scoped="" ref="0x2ad80283fb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2ad802832a50" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ad802832a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802832da0"/>
        <function-ref name="clearAll" scoped="" ref="0x2ad802836020"/>
        <function-ref name="get" scoped="" ref="0x2ad8028361a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802836330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad80281d418" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad80281d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad80281d768"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80281d8f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80281da78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2ad802837438" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2ad802837438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2ad802837788"/>
        <function-ref name="insertNode" scoped="" ref="0x2ad802837910"/>
        <function-ref name="getNode" scoped="" ref="0x2ad802837a98"/>
        <function-ref name="evicted" scoped="" ref="0x2ad802837c20"/>
        <function-ref name="getIndex" scoped="" ref="0x2ad802837da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ad80281dd40" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad80281dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8028400d8"/>
        <function-ref name="header" scoped="" ref="0x2ad802840260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad8028404d8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad8028404d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802840828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2ad80283fe40" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2ad80283fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ad80283d1c0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2ad80283d348"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ad80283d4d0"/>
        <function-ref name="getSender" scoped="" ref="0x2ad80283d658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2ad802841b28" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2ad802841b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2ad802841e78"/>
        <function-ref name="insertNode" scoped="" ref="0x2ad802844030"/>
        <function-ref name="getNode" scoped="" ref="0x2ad8028441b8"/>
        <function-ref name="evicted" scoped="" ref="0x2ad802844340"/>
        <function-ref name="getIndex" scoped="" ref="0x2ad8028444c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2ad802866808" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ad802866808"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802866b58"/>
        <function-ref name="clearAll" scoped="" ref="0x2ad802866ce0"/>
        <function-ref name="get" scoped="" ref="0x2ad802866e68"/>
        <function-ref name="set" scoped="" ref="0x2ad802865020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2ad802867638" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2ad802867638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2ad802867988"/>
        <function-ref name="insertNode" scoped="" ref="0x2ad802867b10"/>
        <function-ref name="getNode" scoped="" ref="0x2ad802867c98"/>
        <function-ref name="evicted" scoped="" ref="0x2ad802867e20"/>
        <function-ref name="getIndex" scoped="" ref="0x2ad802866020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad802867020" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad802867020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802867370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2ad802845990" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ad802845990"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802845ce0"/>
        <function-ref name="clearAll" scoped="" ref="0x2ad802845e68"/>
        <function-ref name="get" scoped="" ref="0x2ad80288b020"/>
        <function-ref name="set" scoped="" ref="0x2ad80288b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad802886920" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad802886920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad802886c70"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad802886df8"/>
        <function-ref name="start" scoped="" ref="0x2ad802883020"/>
        <function-ref name="stop" scoped="" ref="0x2ad8028831a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802880b30" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802880b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802880e80"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80287e030"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80287e1b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad80287e518" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad80287e518"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad80287e868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad8028834b8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad8028834b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802883808"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802883990"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802883b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad8028824a0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad8028824a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8028827f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802882978"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802882b00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802882c88"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802882e10"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802881020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad802881318" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad802881318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad802881668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad8028817f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad802881978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad802881b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ad802880020" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ad802880020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad802880370"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad8028804f8"/>
        <function-ref name="start" scoped="" ref="0x2ad802880680"/>
        <function-ref name="stop" scoped="" ref="0x2ad802880808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad802883e58" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad802883e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8028821e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad80287ebc0" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad80287ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80287d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad80287d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80287d330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad80287d4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad80287d640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad80287d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ad80287ce20" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ad80287ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ad80289f1a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ad80289f330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ad80289f4b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ad80289f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802893860" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802893860"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802893bb0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802893d38"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802892020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad802895340" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad802895340"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802895690"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802895818"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad8028959a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad8028948f8" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad8028948f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802894c48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802894dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802893020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8028931a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802893330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad8028934b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad802892378" loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad802892378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8028926c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802892850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8028929d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802892b60"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802892ce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802892e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ad8028911c0" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8028911c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad802891510"/>
        <function-ref name="noAck" scoped="" ref="0x2ad802891698"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad802891820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ad802895c50" loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ad802895c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ad802894020"/>
        <function-ref name="setRetries" scoped="" ref="0x2ad8028941a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2ad802894330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ad8028944b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ad802894640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad8028b39e8" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad8028b39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad8028b3d38"/>
        <function-ref name="cancel" scoped="" ref="0x2ad8028b2020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad8028b21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2ad8028a1680" loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x2ad8028a1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad8028a19d0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad8028a1b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2ad8028a65a0" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x2ad8028a65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad8028a48f0"/>
        <function-ref name="fired" scoped="" ref="0x2ad8028af020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad8028afd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad8028af8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ad8028a31c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ad8028a4d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad8028af470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad8028b0118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad8028a4320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad8028b05b8"/>
        <function-ref name="stop" scoped="" ref="0x2ad8028b0a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad8028904b0" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad8028904b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802890800"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802890988"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802890b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad8028b4a48" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad8028b4a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8028b4d98"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8028b3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8028b31a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8028b3330"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad8028b34b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad8028b3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad8028a36a8" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad8028a36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad8028a39f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad8028a3b80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8028a3d08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8028a2020"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad8028a21a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad8028a2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ad8028b24d0" loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad8028b24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad8028b2820"/>
        <function-ref name="noAck" scoped="" ref="0x2ad8028b29a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad8028b2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ad802890dc0" loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ad802890dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ad8028b4170"/>
        <function-ref name="setRetries" scoped="" ref="0x2ad8028b42f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2ad8028b4480"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ad8028b4608"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ad8028b4790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad8028e5a60" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad8028e5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad802a8cd60"/>
        <function-ref name="fired" scoped="" ref="0x2ad802a8d470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad802a8c1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad802a8dd10"/>
        <function-ref name="getdt" scoped="" ref="0x2ad802ab9648"/>
        <function-ref name="gett0" scoped="" ref="0x2ad802ab91f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad802a8d8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad802a8e620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad802a8c790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad802a8eac0"/>
        <function-ref name="stop" scoped="" ref="0x2ad802a8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ad8028dfe28" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ad8028dfe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad8029000c0"/>
        <function-ref name="fired" scoped="" ref="0x2ad802902798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad8029014d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad802901088"/>
        <function-ref name="getdt" scoped="" ref="0x2ad802900960"/>
        <function-ref name="gett0" scoped="" ref="0x2ad802900510"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad802902be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad8029049e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad802901aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad802904e80"/>
        <function-ref name="stop" scoped="" ref="0x2ad802902348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ad8028fbd18" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ad8028fbd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad8028f6088"/>
        <function-ref name="fired" scoped="" ref="0x2ad8028f9688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad8028f7470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad8028f7020"/>
        <function-ref name="getdt" scoped="" ref="0x2ad8028f6928"/>
        <function-ref name="gett0" scoped="" ref="0x2ad8028f64d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad8028f9ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad8028fa8b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad8028f7a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad8028fad58"/>
        <function-ref name="stop" scoped="" ref="0x2ad8028f9238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad8028f4020" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ad8028f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad8028f4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad8028fb020" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad8028fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad8028fb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2ad802912150" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2ad802912150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802911020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad802911930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad8029114a8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802911db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad8028f2658" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad8028f2658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad8028f29a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2ad802917020" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2ad802917020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad802914690"/>
        <function-ref name="fired" scoped="" ref="0x2ad8029166f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ad802914088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad802916b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad802914b18"/>
        <function-ref name="start" scoped="" ref="0x2ad802917d70"/>
        <function-ref name="stop" scoped="" ref="0x2ad802916270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad802a167c8" loc="50:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad802a167c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad802a12020"/>
        <function-ref name="fired" scoped="" ref="0x2ad802a13020"/>
        <function-ref name="startAt" scoped="" ref="0x2ad802a13930"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad802a134a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad802a124a8"/>
        <function-ref name="start" scoped="" ref="0x2ad802a15578"/>
        <function-ref name="stop" scoped="" ref="0x2ad802a15a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad802a16020" loc="49:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad802a16020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ad802152388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ad802152388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802a16370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad802a12a90" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad802a12a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802a11828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad802a10190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad802a11cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802a10618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2ad803440b60" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ad803440b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad80343f020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad80343f1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2ad80343f330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad80343f4b8"/>
        <function-ref name="setControlB" scoped="" ref="0x2ad80343f640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad80343f7c8"/>
        <function-ref name="getControlB" scoped="" ref="0x2ad80343f950"/>
        <function-ref name="setControlA" scoped="" ref="0x2ad80343fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad8033f7950" loc="50:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad8033f7950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad8033f3020"/>
        <function-ref name="fired" scoped="" ref="0x2ad8033f40c0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad8033f49d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad8033f4548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad8033f34a8"/>
        <function-ref name="start" scoped="" ref="0x2ad8033f5730"/>
        <function-ref name="stop" scoped="" ref="0x2ad8033f5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad8033f71a8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad8033f71a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad8033f74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad8033f3a90" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad8033f3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad8033f2828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad803445190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad8033f2cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad803445618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2ad80343a060" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ad80343a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2ad80343a3b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2ad80343a538"/>
        <function-ref name="controlABusy" scoped="" ref="0x2ad80343a6c0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2ad80343a848"/>
        <function-ref name="countBusy" scoped="" ref="0x2ad80343a9d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x2ad80343ab58"/>
        <function-ref name="getAssr" scoped="" ref="0x2ad80343ace0"/>
        <function-ref name="setAssr" scoped="" ref="0x2ad80343ae68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2ad80343fe68" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ad80343fe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad80343c798"/>
        <function-ref name="fired" scoped="" ref="0x2ad80343d4f8"/>
        <function-ref name="get" scoped="" ref="0x2ad80343ea18"/>
        <function-ref name="reset" scoped="" ref="0x2ad80343d980"/>
        <function-ref name="isOn" scoped="" ref="0x2ad80343cc20"/>
        <function-ref name="set" scoped="" ref="0x2ad80343d020"/>
        <function-ref name="start" scoped="" ref="0x2ad80343de08"/>
        <function-ref name="stop" scoped="" ref="0x2ad80343c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad803445b98" loc="54:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad803445b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad803442db8"/>
        <function-ref name="test" scoped="" ref="0x2ad8034424a8"/>
        <function-ref name="get" scoped="" ref="0x2ad803444760"/>
        <function-ref name="setScale" scoped="" ref="0x2ad803440270"/>
        <function-ref name="getScale" scoped="" ref="0x2ad803440748"/>
        <function-ref name="reset" scoped="" ref="0x2ad803443580"/>
        <function-ref name="overflow" scoped="" ref="0x2ad8034430f8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad803442930"/>
        <function-ref name="set" scoped="" ref="0x2ad803444be8"/>
        <function-ref name="start" scoped="" ref="0x2ad803443a08"/>
        <function-ref name="stop" scoped="" ref="0x2ad803442020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ad8029a93c0" loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ad8029a93c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad8029a9710"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad8029a9898"/>
        <function-ref name="getControlA" scoped="" ref="0x2ad8029a9a20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad8029a9ba8"/>
        <function-ref name="setControlB" scoped="" ref="0x2ad8029a9d30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad8029a8020"/>
        <function-ref name="getControlB" scoped="" ref="0x2ad8029a81a8"/>
        <function-ref name="setControlA" scoped="" ref="0x2ad8029a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2ad8029a49e8" loc="73:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ad8029a49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2ad8029a4d38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2ad8029a3020"/>
        <function-ref name="controlABusy" scoped="" ref="0x2ad8029a31a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2ad8029a3330"/>
        <function-ref name="countBusy" scoped="" ref="0x2ad8029a34b8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2ad8029a3640"/>
        <function-ref name="getAssr" scoped="" ref="0x2ad8029a37c8"/>
        <function-ref name="setAssr" scoped="" ref="0x2ad8029a3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad8029a87f8" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ad8029a87f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad8029a4020"/>
        <function-ref name="fired" scoped="" ref="0x2ad8029a7d08"/>
        <function-ref name="get" scoped="" ref="0x2ad8029a73a8"/>
        <function-ref name="reset" scoped="" ref="0x2ad8029a61f8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad8029a44a8"/>
        <function-ref name="set" scoped="" ref="0x2ad8029a7830"/>
        <function-ref name="start" scoped="" ref="0x2ad8029a6680"/>
        <function-ref name="stop" scoped="" ref="0x2ad8029a6b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad802984288" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad802984288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad8029814a8"/>
        <function-ref name="test" scoped="" ref="0x2ad802982a40"/>
        <function-ref name="get" scoped="" ref="0x2ad802984e08"/>
        <function-ref name="setScale" scoped="" ref="0x2ad802981930"/>
        <function-ref name="getScale" scoped="" ref="0x2ad802981e08"/>
        <function-ref name="reset" scoped="" ref="0x2ad802983c70"/>
        <function-ref name="overflow" scoped="" ref="0x2ad8029837e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802981020"/>
        <function-ref name="set" scoped="" ref="0x2ad802983310"/>
        <function-ref name="start" scoped="" ref="0x2ad802982130"/>
        <function-ref name="stop" scoped="" ref="0x2ad8029825b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ad80299a020" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ad80299a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad80299a370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad80299a4f8"/>
        <function-ref name="getControlA" scoped="" ref="0x2ad80299a680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad80299a808"/>
        <function-ref name="setControlB" scoped="" ref="0x2ad80299a990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad80299ab18"/>
        <function-ref name="getControlB" scoped="" ref="0x2ad80299aca0"/>
        <function-ref name="setControlA" scoped="" ref="0x2ad80299ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ad8029c0578" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ad8029c0578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ad8029c08c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2ad8029c0c78" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ad8029c0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2ad8029bf020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2ad8029bf1a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2ad8029bf330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2ad8029bf4b8"/>
        <function-ref name="countBusy" scoped="" ref="0x2ad8029bf640"/>
        <function-ref name="compareABusy" scoped="" ref="0x2ad8029bf7c8"/>
        <function-ref name="getAssr" scoped="" ref="0x2ad8029bf950"/>
        <function-ref name="setAssr" scoped="" ref="0x2ad8029bfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad802999340" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ad802999340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad802996c20"/>
        <function-ref name="fired" scoped="" ref="0x2ad802998980"/>
        <function-ref name="get" scoped="" ref="0x2ad802998020"/>
        <function-ref name="reset" scoped="" ref="0x2ad802998e08"/>
        <function-ref name="isOn" scoped="" ref="0x2ad8029c00f8"/>
        <function-ref name="set" scoped="" ref="0x2ad8029984a8"/>
        <function-ref name="start" scoped="" ref="0x2ad802996310"/>
        <function-ref name="stop" scoped="" ref="0x2ad802996798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad8029a2e00" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad8029a2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad80299b0f8"/>
        <function-ref name="test" scoped="" ref="0x2ad80299d798"/>
        <function-ref name="get" scoped="" ref="0x2ad80299fa18"/>
        <function-ref name="setScale" scoped="" ref="0x2ad80299b580"/>
        <function-ref name="getScale" scoped="" ref="0x2ad80299ba58"/>
        <function-ref name="reset" scoped="" ref="0x2ad80299e980"/>
        <function-ref name="overflow" scoped="" ref="0x2ad80299e4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad80299dc20"/>
        <function-ref name="set" scoped="" ref="0x2ad80299e020"/>
        <function-ref name="start" scoped="" ref="0x2ad80299ee08"/>
        <function-ref name="stop" scoped="" ref="0x2ad80299d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ad802a39cf0" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2ad802a39cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad802a380a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad802a38228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ad802a3dc70" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad802a3dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad802a39410"/>
        <function-ref name="fired" scoped="" ref="0x2ad802a3a4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ad802a3adb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad802a3a930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad802a39898"/>
        <function-ref name="start" scoped="" ref="0x2ad802a3b9f0"/>
        <function-ref name="stop" scoped="" ref="0x2ad802a3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad802a42ab0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad802a42ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad802a3ed60"/>
        <function-ref name="fired" scoped="" ref="0x2ad802a3f470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad802a3e1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad802a3fd10"/>
        <function-ref name="getdt" scoped="" ref="0x2ad802a3d648"/>
        <function-ref name="gett0" scoped="" ref="0x2ad802a3d1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad802a3f8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad802a41620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad802a3e790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad802a41ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ad802a3f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ad802a75930" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2ad802a75930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad802a75c80"/>
        <function-ref name="runTask" scoped="" ref="0x2ad802a75e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ad802a7a858" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2ad802a7a858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad802a76bc0"/>
        <function-ref name="fired" scoped="" ref="0x2ad802a771c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad802a76020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad802a77a60"/>
        <function-ref name="getdt" scoped="" ref="0x2ad802a754d8"/>
        <function-ref name="gett0" scoped="" ref="0x2ad802a75088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad802a77610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad802a793d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad802a765f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad802a79878"/>
        <function-ref name="stop" scoped="" ref="0x2ad802a79d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad802a805e0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad802a805e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad802a7b988"/>
        <function-ref name="fired" scoped="" ref="0x2ad802a7d020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ad802a7dd70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ad802a7d900"/>
        <function-ref name="getdt" scoped="" ref="0x2ad802a7a2d8"/>
        <function-ref name="gett0" scoped="" ref="0x2ad802a7bdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad802a7d490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ad802a7f198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ad802a7b398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ad802a7f658"/>
        <function-ref name="stop" scoped="" ref="0x2ad802a7fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad802a9e128" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ad802a9e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802a9eca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad802a95330" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad802a95330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802a940c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad802a949d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad802a94548"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802a94e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad802ab44a0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad802ab44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad802ab47f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad802ab4978"/>
        <function-ref name="start" scoped="" ref="0x2ad802ab4b00"/>
        <function-ref name="stop" scoped="" ref="0x2ad802ab4c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2ad802aa90d0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ad802aa90d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ad802aa9420"/>
        <function-ref name="turnOn" scoped="" ref="0x2ad802aa95a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802aa9730"/>
        <function-ref name="done" scoped="" ref="0x2ad802aa98b8"/>
        <function-ref name="standby" scoped="" ref="0x2ad802aa9a40"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802aa9bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad802ab1020" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad802ab1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802ab1370"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802ab14f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802ab1680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2ad802aa6b28" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad802aa6b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802aa6e78"/>
        <function-ref name="header" scoped="" ref="0x2ad802aa8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad802ab19c0" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad802ab19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802ab1d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2ad802aa6200" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ad802aa6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802aa6550"/>
        <function-ref name="ready" scoped="" ref="0x2ad802aa66d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802aa6860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2ad802ab0020" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2ad802ab0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2ad802ab0370"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802ab04f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802ab0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad802aa8c08" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad802aa8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad802aa3020"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad802aa31a8"/>
        <function-ref name="start" scoped="" ref="0x2ad802aa3330"/>
        <function-ref name="stop" scoped="" ref="0x2ad802aa34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2ad802aa37f0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802aa37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802aa3b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2ad802ad1848" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ad802ad1848"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ad802ad1b98"/>
        <function-ref name="turnOn" scoped="" ref="0x2ad802ad1d20"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802ad0020"/>
        <function-ref name="done" scoped="" ref="0x2ad802ad01a8"/>
        <function-ref name="standby" scoped="" ref="0x2ad802ad0330"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802ad04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad802aa3e50" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad802aa3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802aa21e8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802aa2370"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802aa24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2ad802abf368" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2ad802abf368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad802abf6b8"/>
        <function-ref name="runTask" scoped="" ref="0x2ad802abf840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2ad802acfbf0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad802acfbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802ace020"/>
        <function-ref name="header" scoped="" ref="0x2ad802ace1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2ad802ae4190" loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2ad802ae4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad802ae44e0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad802ae4668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad802aa2838" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad802aa2838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802aa2b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2ad802afb368" loc="280:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2ad802afb368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad802afb6b8"/>
        <function-ref name="runTask" scoped="" ref="0x2ad802afb840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2ad802acf2c8" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ad802acf2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802acf618"/>
        <function-ref name="ready" scoped="" ref="0x2ad802acf7a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802acf928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2ad802aa2e50" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2ad802aa2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2ad802ad11e8"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802ad1370"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802ad14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2ad802ad0748" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2ad802ad0748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2ad802ad0a98"/>
        <function-ref name="suspend" scoped="" ref="0x2ad802ad0c20"/>
        <function-ref name="resume" scoped="" ref="0x2ad802ad0da8"/>
        <function-ref name="run" scoped="" ref="0x2ad802acf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad802b06978" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad802b06978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad802b06cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad802b06e50"/>
        <function-ref name="start" scoped="" ref="0x2ad802b05020"/>
        <function-ref name="stop" scoped="" ref="0x2ad802b051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2ad802b32060" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2ad802b32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ad802b323b0"/>
        <function-ref name="request" scoped="" ref="0x2ad802b32538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802b30740" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802b30740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b30a90"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802b30c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b30da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad802b2f060" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad802b2f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b2f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x2ad802b2e5b8" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x2ad802b2e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b2e908"/>
        <function-ref name="ready" scoped="" ref="0x2ad802b2ea90"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b2ec18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2ad802b042e8" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ad802b042e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ad802b04638"/>
        <function-ref name="turnOn" scoped="" ref="0x2ad802b047c0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802b04948"/>
        <function-ref name="done" scoped="" ref="0x2ad802b04ad0"/>
        <function-ref name="standby" scoped="" ref="0x2ad802b04c58"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802b04de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad802b05430" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad802b05430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b05780"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802b05908"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b05a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad802b32780" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad802b32780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802b32ad0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802b32c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802b32de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802b31020"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802b311a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802b31330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2ad802b315b8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2ad802b315b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ad802b31908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ad802b03908" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b03908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b03c58"/>
        <function-ref name="header" scoped="" ref="0x2ad802b03de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2ad802b2f638" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2ad802b2f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ad802b2fa88"/>
        <function-ref name="turnOn" scoped="" ref="0x2ad802b2fc10"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802b2fd98"/>
        <function-ref name="done" scoped="" ref="0x2ad802b2e020"/>
        <function-ref name="standby" scoped="" ref="0x2ad802b2e1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802b2e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ad802b31bf0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ad802b31bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad802b30020"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad802b301a8"/>
        <function-ref name="start" scoped="" ref="0x2ad802b30330"/>
        <function-ref name="stop" scoped="" ref="0x2ad802b304b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad802b2b020" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad802b2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802b2b370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802b2b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802b2b680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802b2b808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802b2b990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802b2bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad802b05d18" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad802b05d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b040a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ad802b2bda0" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ad802b2bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ad802b2a170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x2ad802b2d020" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x2ad802b2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b2d370"/>
        <function-ref name="header" scoped="" ref="0x2ad802b2d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ad802b03060" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ad802b03060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b033b0"/>
        <function-ref name="ready" scoped="" ref="0x2ad802b03538"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b036c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2ad802b2d780" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2ad802b2d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ad802b2dad0"/>
        <function-ref name="request" scoped="" ref="0x2ad802b2dc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802b23578" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802b23578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b238c8"/>
        <function-ref name="ready" scoped="" ref="0x2ad802b23a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b23bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad802b22020" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad802b22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b22370"/>
        <function-ref name="header" scoped="" ref="0x2ad802b224f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ad802b22898" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ad802b22898"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2ad802b22be8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2ad802b22d70"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2ad802b21020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2ad802b211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ad802b24be0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b24be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b23020"/>
        <function-ref name="header" scoped="" ref="0x2ad802b231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ad802b242b8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ad802b242b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b24608"/>
        <function-ref name="ready" scoped="" ref="0x2ad802b24790"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b24918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802b1d020" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802b1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b1d370"/>
        <function-ref name="ready" scoped="" ref="0x2ad802b1d4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b1d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad802b1d9f0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad802b1d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b1dd40"/>
        <function-ref name="header" scoped="" ref="0x2ad802b1c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2ad802b1c2d0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ad802b1c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad802b1c620"/>
        <function-ref name="wait" scoped="" ref="0x2ad802b1c7a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802b1c930"/>
        <function-ref name="isFree" scoped="" ref="0x2ad802b1cab8"/>
        <function-ref name="getNow" scoped="" ref="0x2ad802b1cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ad802b4a3a0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ad802b4a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad802b4a6f0"/>
        <function-ref name="rand32" scoped="" ref="0x2ad802b4a878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ad802b4ac18" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ad802b4ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2ad802b1a020"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2ad802b1a1a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2ad802b1a330"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2ad802b1a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ad802b1e748" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b1e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b1ea98"/>
        <function-ref name="header" scoped="" ref="0x2ad802b1ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ad802b21d98" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ad802b21d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b1e170"/>
        <function-ref name="ready" scoped="" ref="0x2ad802b1e2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b1e480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2ad802b46cd8" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2ad802b46cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad802b450a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ad802b45228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ad802b56208" loc="35:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ad802b56208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad802b56558"/>
        <function-ref name="rand32" scoped="" ref="0x2ad802b566e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ad802b581a0" loc="34:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2ad802b581a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802b58ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad802b5c338" loc="33:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad802b5c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802b5c688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ad802b51080" loc="37:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ad802b51080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ad802b513d0"/>
        <function-ref name="rand32" scoped="" ref="0x2ad802b51558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ad802b52020" loc="36:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2ad802b52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802b52b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad802b536a0" loc="35:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad802b536a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802b539f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802b71a50" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802b71a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b71da0"/>
        <function-ref name="ready" scoped="" ref="0x2ad802b70020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b701a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad802b70518" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad802b70518"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b70868"/>
        <function-ref name="header" scoped="" ref="0x2ad802b709f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ad802b70d68" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ad802b70d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2ad802b6f0f0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2ad802b6f278"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ad802b6f400"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2ad802b6f588"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2ad802b6f710"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2ad802b6f898"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ad802b6fa20"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ad802b6fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ad802b72748" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b72748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b72a98"/>
        <function-ref name="header" scoped="" ref="0x2ad802b72c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ad802b75de0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ad802b75de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b72170"/>
        <function-ref name="ready" scoped="" ref="0x2ad802b722f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b72480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad802b71020" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad802b71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad802b71370"/>
        <function-ref name="noAck" scoped="" ref="0x2ad802b714f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad802b71680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802b693f0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802b693f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b69740"/>
        <function-ref name="ready" scoped="" ref="0x2ad802b698c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b69a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad802b69dc0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad802b69dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b68170"/>
        <function-ref name="header" scoped="" ref="0x2ad802b682f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2ad802b685a8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ad802b685a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad802b688f8"/>
        <function-ref name="wait" scoped="" ref="0x2ad802b68a80"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802b68c08"/>
        <function-ref name="isFree" scoped="" ref="0x2ad802b68d90"/>
        <function-ref name="getNow" scoped="" ref="0x2ad802b67020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2ad802b92468" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2ad802b92468"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802b927b8"/>
        <function-ref name="get" scoped="" ref="0x2ad802b92940"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802b92ac8"/>
        <function-ref name="set" scoped="" ref="0x2ad802b92c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ad802b6a140" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad802b6a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802b6a490"/>
        <function-ref name="header" scoped="" ref="0x2ad802b6a618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x2ad802b67318" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2ad802b67318"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2ad802b67668"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2ad802b677f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ad802b67978"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2ad802b67b00"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2ad802b67c88"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2ad802b67e10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ad802b66020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ad802b661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ad802b6e7e0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ad802b6e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802b6eb30"/>
        <function-ref name="ready" scoped="" ref="0x2ad802b6ecb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802b6ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ad802b6a940" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ad802b6a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad802b6ac90"/>
        <function-ref name="noAck" scoped="" ref="0x2ad802b6ae18"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad802b69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2ad802ba6980" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="SoftwareAckLayerC.MetadataFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2ad802ba6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802ba6cd0"/>
        <function-ref name="get" scoped="" ref="0x2ad802ba6e58"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802ba5020"/>
        <function-ref name="set" scoped="" ref="0x2ad802ba51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad802ba0460" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad802ba0460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802ba07b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802ba0938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802ba0ac0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802ba0c48"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802ba0dd0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802b9f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad802b9f418" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad802b9f418"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802b9f768"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802b9f8f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802b9fa78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802b9fc00"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802b9fd88"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802b9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2ad802ba38f0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2ad802ba38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802ba3c40"/>
        <function-ref name="get" scoped="" ref="0x2ad802ba3dc8"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802ba0020"/>
        <function-ref name="set" scoped="" ref="0x2ad802ba01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ad802bb2978" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ad802bb2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad802bb2cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad802bb2e50"/>
        <function-ref name="start" scoped="" ref="0x2ad802bb1020"/>
        <function-ref name="stop" scoped="" ref="0x2ad802bb11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2ad802be1060" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2ad802be1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ad802be13b0"/>
        <function-ref name="request" scoped="" ref="0x2ad802be1538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ad802bdf740" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ad802bdf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802bdfa90"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802bdfc18"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802bdfda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ad802bde060" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ad802bde060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802bde3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x2ad802bdd5b8" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x2ad802bdd5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802bdd908"/>
        <function-ref name="ready" scoped="" ref="0x2ad802bdda90"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802bddc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2ad802bb02e8" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ad802bb02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ad802bb0638"/>
        <function-ref name="turnOn" scoped="" ref="0x2ad802bb07c0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802bb0948"/>
        <function-ref name="done" scoped="" ref="0x2ad802bb0ad0"/>
        <function-ref name="standby" scoped="" ref="0x2ad802bb0c58"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802bb0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad802bb1430" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad802bb1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802bb1780"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802bb1908"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802bb1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad802be1780" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad802be1780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802be1ad0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802be1c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802be1de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802be0020"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802be01a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802be0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2ad802be05b8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2ad802be05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ad802be0908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ad802be3908" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad802be3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802be3c58"/>
        <function-ref name="header" scoped="" ref="0x2ad802be3de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2ad802bde638" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2ad802bde638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ad802bdea88"/>
        <function-ref name="turnOn" scoped="" ref="0x2ad802bdec10"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802bded98"/>
        <function-ref name="done" scoped="" ref="0x2ad802bdd020"/>
        <function-ref name="standby" scoped="" ref="0x2ad802bdd1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802bdd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ad802be0bf0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ad802be0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ad802bdf020"/>
        <function-ref name="stopDone" scoped="" ref="0x2ad802bdf1a8"/>
        <function-ref name="start" scoped="" ref="0x2ad802bdf330"/>
        <function-ref name="stop" scoped="" ref="0x2ad802bdf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad802bda020" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad802bda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802bda370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802bda4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802bda680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802bda808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802bda990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802bdab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad802bb1d18" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad802bb1d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802bb00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ad802bdada0" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ad802bdada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ad802bd9170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x2ad802bdc020" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x2ad802bdc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802bdc370"/>
        <function-ref name="header" scoped="" ref="0x2ad802bdc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ad802be3060" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ad802be3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802be33b0"/>
        <function-ref name="ready" scoped="" ref="0x2ad802be3538"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802be36c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2ad802bdc780" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2ad802bdc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ad802bdcad0"/>
        <function-ref name="request" scoped="" ref="0x2ad802bdcc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad802bcd810" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad802bcd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802bcdb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802bcdce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802bcde70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802bcb020"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802bcb1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802bcb330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad802bca978" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad802bca978"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802bcacc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802bcae50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802bfd020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802bfd1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802bfd330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802bfd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2ad802bd1cc8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802bd1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad802bce150"/>
        <function-ref name="clear" scoped="" ref="0x2ad802bce830"/>
        <function-ref name="isValid" scoped="" ref="0x2ad802bcfa40"/>
        <function-ref name="set" scoped="" ref="0x2ad802bcd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2ad802bcb890" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802bcb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802bca490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad802bd6e58" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad802bd6e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad802bd2300"/>
        <function-ref name="clear" scoped="" ref="0x2ad802bd29e0"/>
        <function-ref name="isValid" scoped="" ref="0x2ad802bd3be8"/>
        <function-ref name="set" scoped="" ref="0x2ad802bd10f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2ad802bf1020" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2ad802bf1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802bf1370"/>
        <function-ref name="get" scoped="" ref="0x2ad802bf14f8"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802bf1680"/>
        <function-ref name="set" scoped="" ref="0x2ad802bf1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad802bf2020" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad802bf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802bf2370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802bf24f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802bf2680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802bf2808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802bf2990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802bf2b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ad802bed0c0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ad802bed0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802bed410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802bed598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802bed720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802bed8a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802beda30"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802bedbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2ad802bf6378" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ad802bf6378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad802bf57d8"/>
        <function-ref name="clear" scoped="" ref="0x2ad802bf3020"/>
        <function-ref name="isValid" scoped="" ref="0x2ad802bf50f8"/>
        <function-ref name="set" scoped="" ref="0x2ad802bf3700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2ad802bf1cc8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802bf1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802bf0870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2ad802bef020" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ad802bef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802befba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ad802bfa478" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ad802bfa478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad802bf9900"/>
        <function-ref name="clear" scoped="" ref="0x2ad802bf7020"/>
        <function-ref name="isValid" scoped="" ref="0x2ad802bf9220"/>
        <function-ref name="set" scoped="" ref="0x2ad802bf7700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad802bfce28" loc="20:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ad802bfce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dd798"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad8021ddaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802c31a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2ad802c2f060" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2ad802c2f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c2f3b0"/>
        <function-ref name="get" scoped="" ref="0x2ad802c2f538"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802c2f6c0"/>
        <function-ref name="set" scoped="" ref="0x2ad802c2f848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2ad802c28d70" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2ad802c28d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ad802c260f0"/>
        <function-ref name="request" scoped="" ref="0x2ad802c26278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2ad802c23b20" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2ad802c23b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c20190"/>
        <function-ref name="get" scoped="" ref="0x2ad802c21c38"/>
        <function-ref name="isSet" scoped="" ref="0x2ad802c21728"/>
        <function-ref name="set" scoped="" ref="0x2ad802c206a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ad802c4ba40" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad802c4ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad802c49020"/>
        <function-ref name="clear" scoped="" ref="0x2ad802c49700"/>
        <function-ref name="isValid" scoped="" ref="0x2ad802c4a828"/>
        <function-ref name="set" scoped="" ref="0x2ad802c49de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2ad802c2ce68" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ad802c2ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ad802c291e8"/>
        <function-ref name="turnOn" scoped="" ref="0x2ad802c29370"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802c294f8"/>
        <function-ref name="done" scoped="" ref="0x2ad802c29680"/>
        <function-ref name="standby" scoped="" ref="0x2ad802c29808"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802c29990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad802c26530" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad802c26530"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c26880"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802c26a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802c26b90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802c26d18"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802c25020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802c251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2ad802c256b0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ad802c256b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c24dc8"/>
        <function-ref name="get" scoped="" ref="0x2ad802c248b8"/>
        <function-ref name="isSet" scoped="" ref="0x2ad802c243a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802c23328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ad802c285f8" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad802c285f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802c28948"/>
        <function-ref name="header" scoped="" ref="0x2ad802c28ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ad802c1e020" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad802c1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c1d608"/>
        <function-ref name="get" scoped="" ref="0x2ad802c1d0f8"/>
        <function-ref name="isSet" scoped="" ref="0x2ad802c1eba0"/>
        <function-ref name="set" scoped="" ref="0x2ad802c1db18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ad802c189b8" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ad802c189b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802c18d08"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802c4b020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802c4b1a8"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2ad802c4b330"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2ad802c4b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2ad802c19828" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802c19828"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802c18410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ad802c29c38" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ad802c29c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802c28020"/>
        <function-ref name="ready" scoped="" ref="0x2ad802c281a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802c28330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2ad802c1c390" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ad802c1c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c1ba40"/>
        <function-ref name="get" scoped="" ref="0x2ad802c1b530"/>
        <function-ref name="isSet" scoped="" ref="0x2ad802c1b020"/>
        <function-ref name="set" scoped="" ref="0x2ad802c19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2ad802c3f2c0" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2ad802c3f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ad802c3f610"/>
        <function-ref name="request" scoped="" ref="0x2ad802c3f798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2ad802c56748" loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2ad802c56748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ad802c59578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2ad802c3a020" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2ad802c3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c38608"/>
        <function-ref name="get" scoped="" ref="0x2ad802c380f8"/>
        <function-ref name="isSet" scoped="" ref="0x2ad802c3aba0"/>
        <function-ref name="set" scoped="" ref="0x2ad802c38b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2ad802c54678" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2ad802c54678"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c549c8"/>
        <function-ref name="get" scoped="" ref="0x2ad802c54b50"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802c54cd8"/>
        <function-ref name="set" scoped="" ref="0x2ad802c54e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2ad802c42ca8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ad802c42ca8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ad8021526f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ad8021526f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802c41020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ad802c51020" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ad802c51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ad802c50478"/>
        <function-ref name="clear" scoped="" ref="0x2ad802c50b58"/>
        <function-ref name="isValid" scoped="" ref="0x2ad802c51d70"/>
        <function-ref name="set" scoped="" ref="0x2ad802c4f278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2ad802c637d0" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2ad802c637d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802c63b20"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802c63ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802c63e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802c5e020"/>
        <function-ref name="get" scoped="" ref="0x2ad802c5e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802c5e330"/>
        <function-ref name="set" scoped="" ref="0x2ad802c5e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802c5e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2ad802c4d768" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ad802c4d768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ad802c4dab8"/>
        <function-ref name="wait" scoped="" ref="0x2ad802c4dc40"/>
        <function-ref name="cancel" scoped="" ref="0x2ad802c4ddc8"/>
        <function-ref name="isFree" scoped="" ref="0x2ad802c82020"/>
        <function-ref name="getNow" scoped="" ref="0x2ad802c821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2ad802c412d0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ad802c412d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ad802c41620"/>
        <function-ref name="turnOn" scoped="" ref="0x2ad802c417a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2ad802c41930"/>
        <function-ref name="done" scoped="" ref="0x2ad802c41ab8"/>
        <function-ref name="standby" scoped="" ref="0x2ad802c41c40"/>
        <function-ref name="getChannel" scoped="" ref="0x2ad802c41dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2ad802c59b48" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ad802c59b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802c58728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2ad802c3eb48" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ad802c3eb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c3b190"/>
        <function-ref name="get" scoped="" ref="0x2ad802c3dc38"/>
        <function-ref name="isSet" scoped="" ref="0x2ad802c3d728"/>
        <function-ref name="set" scoped="" ref="0x2ad802c3b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ad802c3fa50" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ad802c3fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c3fda0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad802c3e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802c3e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad802c3e330"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802c3e4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802c3e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2ad802c64658" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2ad802c64658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802c649a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802c64b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802c64cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802c64e40"/>
        <function-ref name="get" scoped="" ref="0x2ad802c63020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802c631a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802c63330"/>
        <function-ref name="clr" scoped="" ref="0x2ad802c634b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ad802c58c30" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ad802c58c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad802c55020"/>
        <function-ref name="headerLength" scoped="" ref="0x2ad802c551a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ad802c55330"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2ad802c554b8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2ad802c55640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ad802c409e8" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ad802c409e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad802c40d38"/>
        <function-ref name="header" scoped="" ref="0x2ad802c3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ad802c373b0" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ad802c373b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c36a40"/>
        <function-ref name="get" scoped="" ref="0x2ad802c36530"/>
        <function-ref name="isSet" scoped="" ref="0x2ad802c36020"/>
        <function-ref name="set" scoped="" ref="0x2ad802c34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ad802c421f0" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad802c421f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ad8021526f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ad8021526f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802c42540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ad802c66ca0" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2ad802c66ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad802c65170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad802c652f8"/>
        <function-ref name="request" scoped="" ref="0x2ad802c65480"/>
        <function-ref name="granted" scoped="" ref="0x2ad802c65608"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad802c65790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2ad802c67a88" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2ad802c67a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802c67dd8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802c66020"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802c661a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802c66330"/>
        <function-ref name="get" scoped="" ref="0x2ad802c664b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802c66640"/>
        <function-ref name="set" scoped="" ref="0x2ad802c667c8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802c66950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2ad802c34860" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ad802c34860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c33e30"/>
        <function-ref name="get" scoped="" ref="0x2ad802c33920"/>
        <function-ref name="isSet" scoped="" ref="0x2ad802c33410"/>
        <function-ref name="set" scoped="" ref="0x2ad802c67388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ad802c400c0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ad802c400c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802c40410"/>
        <function-ref name="ready" scoped="" ref="0x2ad802c40598"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802c40720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2ad802c5d020" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2ad802c5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ad802c5d370"/>
        <function-ref name="disable" scoped="" ref="0x2ad802c5d4f8"/>
        <function-ref name="captured" scoped="" ref="0x2ad802c5d680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ad802c5d808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2ad802c5faf8" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2ad802c5faf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ad802c5fe48"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ad802c64020"/>
        <function-ref name="splitRead" scoped="" ref="0x2ad802c641a8"/>
        <function-ref name="write" scoped="" ref="0x2ad802c64330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2ad802c53208" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2ad802c53208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c53558"/>
        <function-ref name="get" scoped="" ref="0x2ad802c536e0"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802c53868"/>
        <function-ref name="set" scoped="" ref="0x2ad802c539f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2ad802c559e0" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2ad802c559e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802c55d30"/>
        <function-ref name="get" scoped="" ref="0x2ad802c54020"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802c541a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802c54330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2ad802c4fa40" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2ad802c4fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2ad802c4d020"/>
        <function-ref name="suspend" scoped="" ref="0x2ad802c4d1a8"/>
        <function-ref name="resume" scoped="" ref="0x2ad802c4d330"/>
        <function-ref name="run" scoped="" ref="0x2ad802c4d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2ad802d3f4c0" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2ad802d3f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802d3f810"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802d3f998"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802d3fb20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802d3fca8"/>
        <function-ref name="get" scoped="" ref="0x2ad802d3fe30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802d3e020"/>
        <function-ref name="set" scoped="" ref="0x2ad802d3e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ad802d3e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2ad802d40348" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2ad802d40348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802d40698"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802d40820"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802d409a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802d40b30"/>
        <function-ref name="get" scoped="" ref="0x2ad802d40cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802d40e40"/>
        <function-ref name="set" scoped="" ref="0x2ad802d3f020"/>
        <function-ref name="clr" scoped="" ref="0x2ad802d3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad802d3c418" loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad802d3c418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad802d3aab0"/>
        <function-ref name="fired" scoped="" ref="0x2ad802d3baf0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad802d3a4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad802d3a020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad802d39020"/>
        <function-ref name="start" scoped="" ref="0x2ad802d3b190"/>
        <function-ref name="stop" scoped="" ref="0x2ad802d3b668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2ad802d42b18" loc="31:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2ad802d42b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad802d42e68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad802d41020"/>
        <function-ref name="request" scoped="" ref="0x2ad802d411a8"/>
        <function-ref name="granted" scoped="" ref="0x2ad802d41330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad802d414b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2ad802d45910" loc="30:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2ad802d45910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802d45c60"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802d45de8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802d42020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802d421a8"/>
        <function-ref name="get" scoped="" ref="0x2ad802d42330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802d424b8"/>
        <function-ref name="set" scoped="" ref="0x2ad802d42640"/>
        <function-ref name="clr" scoped="" ref="0x2ad802d427c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2ad802d3e648" loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2ad802d3e648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ad802d3e998"/>
        <function-ref name="disable" scoped="" ref="0x2ad802d3eb20"/>
        <function-ref name="captured" scoped="" ref="0x2ad802d3eca8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ad802d3ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ad802d41770" loc="32:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2ad802d41770"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ad802d41ac0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ad802d41c48"/>
        <function-ref name="splitRead" scoped="" ref="0x2ad802d41dd0"/>
        <function-ref name="write" scoped="" ref="0x2ad802d40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2ad802d39670" loc="39:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ad802d39670"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TRadio" ref="0x2ad802463140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802d37220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2ad802d63e50" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2ad802d63e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802d621e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802d62370"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802d624f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802d62680"/>
        <function-ref name="get" scoped="" ref="0x2ad802d62808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802d62990"/>
        <function-ref name="set" scoped="" ref="0x2ad802d62b18"/>
        <function-ref name="clr" scoped="" ref="0x2ad802d62ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2ad802d2b7f0" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ad802d2b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ad802d63930"/>
        <function-ref name="test" scoped="" ref="0x2ad802d63020"/>
        <function-ref name="get" scoped="" ref="0x2ad802d323a8"/>
        <function-ref name="captured" scoped="" ref="0x2ad802d32d08"/>
        <function-ref name="reset" scoped="" ref="0x2ad802d2a238"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802d634a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802d32830"/>
        <function-ref name="start" scoped="" ref="0x2ad802d2a6c0"/>
        <function-ref name="stop" scoped="" ref="0x2ad802d2ab48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2ad802d61020" loc="36:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2ad802d61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802d61370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802d614f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802d61680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802d61808"/>
        <function-ref name="get" scoped="" ref="0x2ad802d61990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802d61b18"/>
        <function-ref name="set" scoped="" ref="0x2ad802d61ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad802d61e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ad802d34b40" loc="29:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ad802d34b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802d33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2ad802d34020" loc="28:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2ad802d34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ad802d34370"/>
        <function-ref name="disable" scoped="" ref="0x2ad802d344f8"/>
        <function-ref name="captured" scoped="" ref="0x2ad802d34680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ad802d34808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ad802d80480" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2ad802d80480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802d807d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802d80958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ad802d4e5f8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2ad802d4e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ad802d4e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad802d52020" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad802d52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802d52370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ad802d4ec40" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2ad802d4ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ad802d51020"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ad802d511a8"/>
        <function-ref name="splitRead" scoped="" ref="0x2ad802d51330"/>
        <function-ref name="write" scoped="" ref="0x2ad802d514b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad802d4f1c8" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad802d4f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad802d4f518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad802d4f6a0"/>
        <function-ref name="request" scoped="" ref="0x2ad802d4f828"/>
        <function-ref name="granted" scoped="" ref="0x2ad802d4f9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad802d4fb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2ad802db0830" loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2ad802db0830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad802db0b80"/>
        <function-ref name="runTask" scoped="" ref="0x2ad802db0d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ad802d7c450" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2ad802d7c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad802d7c7a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad802d7c928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2ad802d99888" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2ad802d99888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad802d99bd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad802d99d60"/>
        <function-ref name="request" scoped="" ref="0x2ad802d97020"/>
        <function-ref name="granted" scoped="" ref="0x2ad802d971a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad802d97330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ad802d7d330" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2ad802d7d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ad802d7d680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad802d4dd18" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad802d4dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802d7d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2ad802d9a5a8" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2ad802d9a5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2ad802d9a8f8"/>
        <function-ref name="sleep" scoped="" ref="0x2ad802d78de8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2ad802d9ac08"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad802d99020"/>
        <function-ref name="initMaster" scoped="" ref="0x2ad802d79020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2ad802d791a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ad802d79330"/>
        <function-ref name="read" scoped="" ref="0x2ad802d794b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2ad802d79640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ad802d797c8"/>
        <function-ref name="setClock" scoped="" ref="0x2ad802d79950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad802d79ad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2ad802d79c60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2ad802d78020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2ad802d781a8"/>
        <function-ref name="write" scoped="" ref="0x2ad802d78330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad802d784b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2ad802d78640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2ad802d787c8"/>
        <function-ref name="getClock" scoped="" ref="0x2ad802d78950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ad802d78ad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2ad802d9aa80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2ad802d9ad90"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2ad802d78c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ad802d7d938" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2ad802d7d938"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ad802d7dc88"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ad802d7de10"/>
        <function-ref name="splitRead" scoped="" ref="0x2ad802d7c020"/>
        <function-ref name="write" scoped="" ref="0x2ad802d7c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad802d7b1c8" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad802d7b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad802d7b518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad802d7b6a0"/>
        <function-ref name="request" scoped="" ref="0x2ad802d7b828"/>
        <function-ref name="granted" scoped="" ref="0x2ad802d7b9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad802d7bb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ad802d975e8" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad802d975e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad802d97938"/>
        <function-ref name="userId" scoped="" ref="0x2ad802d97ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2ad802d97d90" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ad802d97d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ad802d96170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2ad802dc1020" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2ad802dc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2ad802dc1370"/>
        <function-ref name="sleep" scoped="" ref="0x2ad802dbf7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2ad802dc1680"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad802dbf950"/>
        <function-ref name="initMaster" scoped="" ref="0x2ad802dc1990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2ad802dc1b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ad802dc1ca0"/>
        <function-ref name="read" scoped="" ref="0x2ad802dc1e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2ad802dc0020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ad802dc01a8"/>
        <function-ref name="setClock" scoped="" ref="0x2ad802dc0330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad802dc04b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2ad802dc0640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2ad802dc08c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2ad802dc0a50"/>
        <function-ref name="write" scoped="" ref="0x2ad802dc0bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad802dc0d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2ad802dbf020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2ad802dbf1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2ad802dbf330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ad802dbf4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2ad802dc14f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2ad802dc1808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2ad802dbf640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2ad802dee190" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2ad802dee190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802dee4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802dee668"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802dee7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802dee978"/>
        <function-ref name="get" scoped="" ref="0x2ad802deeb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802deec88"/>
        <function-ref name="set" scoped="" ref="0x2ad802deee10"/>
        <function-ref name="clr" scoped="" ref="0x2ad802ded020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2ad802df4de0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2ad802df4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802df3170"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802df32f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802df3480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802df3608"/>
        <function-ref name="get" scoped="" ref="0x2ad802df3790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802df3918"/>
        <function-ref name="set" scoped="" ref="0x2ad802df3aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ad802df3c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2ad802df0c70" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2ad802df0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802df4020"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802df41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802df4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802df44b8"/>
        <function-ref name="get" scoped="" ref="0x2ad802df4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802df47c8"/>
        <function-ref name="set" scoped="" ref="0x2ad802df4950"/>
        <function-ref name="clr" scoped="" ref="0x2ad802df4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2ad802df0438" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ad802df0438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ad802df0788"/>
        <function-ref name="stop" scoped="" ref="0x2ad802df0910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2ad802ded350" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2ad802ded350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ad802ded6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2ad802dbedc0" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2ad802dbedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2ad802df7170"/>
        <function-ref name="sleep" scoped="" ref="0x2ad802df5640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2ad802df7480"/>
        <function-ref name="dataReady" scoped="" ref="0x2ad802df57c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2ad802df7790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2ad802df7918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ad802df7aa0"/>
        <function-ref name="read" scoped="" ref="0x2ad802df7c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2ad802df7db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ad802df6020"/>
        <function-ref name="setClock" scoped="" ref="0x2ad802df61a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ad802df6330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2ad802df64b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2ad802df6740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2ad802df68c8"/>
        <function-ref name="write" scoped="" ref="0x2ad802df6a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ad802df6bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2ad802df6d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2ad802df5020"/>
        <function-ref name="getClock" scoped="" ref="0x2ad802df51a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ad802df5330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2ad802df72f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2ad802df7608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2ad802df54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2ad802def020" loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2ad802def020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad802def370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad802def4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad802def680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad802def808"/>
        <function-ref name="get" scoped="" ref="0x2ad802def990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad802defb18"/>
        <function-ref name="set" scoped="" ref="0x2ad802defca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad802defe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad802e1e698" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad802e1e698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad802e1ea08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad802e1eb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad802e1d6a0" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad802e1d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad802e1da10"/>
        <function-ref name="configure" scoped="" ref="0x2ad802e1db98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad802e1f878" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad802e1f878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad802e1fbe8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad802e1fd70"/>
        <function-ref name="request" scoped="" ref="0x2ad802e1e020"/>
        <function-ref name="granted" scoped="" ref="0x2ad802e1e1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad802e1e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad802e1edd8" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad802e1edd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad802e1d170"/>
        <function-ref name="userId" scoped="" ref="0x2ad802e1d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad8034b0550" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad8034b0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad8034b08a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ad8034b0b28" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2ad8034b0b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad8034b0e78"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad8034af030"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad8034af1b8"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad8034af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ad8034ad698" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ad8034ad698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ad8034ada08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ad8034adb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ad8034ac6c0" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ad8034ac6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ad8034aca30"/>
        <function-ref name="configure" scoped="" ref="0x2ad8034acbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ad8034ace40" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ad8034ace40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ad8034aa1c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ad8034aa348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ad8034aa4d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ad8034aa658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ad8034ae918" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ad8034ae918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ad8034aec88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ad8034aee10"/>
        <function-ref name="request" scoped="" ref="0x2ad8034ad020"/>
        <function-ref name="granted" scoped="" ref="0x2ad8034ad1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ad8034ad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ad8034addd8" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ad8034addd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ad8034ac170"/>
        <function-ref name="userId" scoped="" ref="0x2ad8034ac2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ad8034aa920" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ad8034aa920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad8034aac70"/>
        <function-ref name="runTask" scoped="" ref="0x2ad8034aadf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ad802e415e8" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ad802e415e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2ad802e41938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad802e41ac0"/>
        <function-ref name="getControlA" scoped="" ref="0x2ad802e41c48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad802e41dd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad802e4a020"/>
        <function-ref name="setControlB" scoped="" ref="0x2ad802e4a1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad802e4a330"/>
        <function-ref name="getControlB" scoped="" ref="0x2ad802e4a4b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2ad802e4a640"/>
        <function-ref name="setControlA" scoped="" ref="0x2ad802e4a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad802e4aca0" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ad802e4aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ad802e3fe20"/>
        <function-ref name="test" scoped="" ref="0x2ad802e3f510"/>
        <function-ref name="get" scoped="" ref="0x2ad802e49858"/>
        <function-ref name="captured" scoped="" ref="0x2ad802e40238"/>
        <function-ref name="reset" scoped="" ref="0x2ad802e40710"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802e3f998"/>
        <function-ref name="set" scoped="" ref="0x2ad802e49ce0"/>
        <function-ref name="start" scoped="" ref="0x2ad802e40b98"/>
        <function-ref name="stop" scoped="" ref="0x2ad802e3f088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ad802e3da20" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ad802e3da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad802e39270"/>
        <function-ref name="fired" scoped="" ref="0x2ad802e3b020"/>
        <function-ref name="get" scoped="" ref="0x2ad802e3c5d8"/>
        <function-ref name="reset" scoped="" ref="0x2ad802e3b4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802e396f8"/>
        <function-ref name="set" scoped="" ref="0x2ad802e3ca60"/>
        <function-ref name="start" scoped="" ref="0x2ad802e3b930"/>
        <function-ref name="stop" scoped="" ref="0x2ad802e3bdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad802e526e0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad802e526e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad802e4c930"/>
        <function-ref name="test" scoped="" ref="0x2ad802e4c020"/>
        <function-ref name="get" scoped="" ref="0x2ad802e4f3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2ad802e4cdb8"/>
        <function-ref name="getScale" scoped="" ref="0x2ad802e4b2f0"/>
        <function-ref name="reset" scoped="" ref="0x2ad802e4e1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802e4fd08"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802e4c4a8"/>
        <function-ref name="set" scoped="" ref="0x2ad802e4f830"/>
        <function-ref name="start" scoped="" ref="0x2ad802e4e680"/>
        <function-ref name="stop" scoped="" ref="0x2ad802e4eb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ad802e6fc90" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ad802e6fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2ad802e6e020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ad802e6e1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2ad802e6e330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ad802e6e4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ad802e6e640"/>
        <function-ref name="setControlB" scoped="" ref="0x2ad802e6e7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ad802e6e950"/>
        <function-ref name="getControlB" scoped="" ref="0x2ad802e6ead8"/>
        <function-ref name="setControlC" scoped="" ref="0x2ad802e6ec60"/>
        <function-ref name="setControlA" scoped="" ref="0x2ad802e6ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2ad802e69c48" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2ad802e69c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad802e654a8"/>
        <function-ref name="fired" scoped="" ref="0x2ad802e661d0"/>
        <function-ref name="get" scoped="" ref="0x2ad802e68820"/>
        <function-ref name="reset" scoped="" ref="0x2ad802e66658"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802e65930"/>
        <function-ref name="set" scoped="" ref="0x2ad802e68ca8"/>
        <function-ref name="start" scoped="" ref="0x2ad802e66ae0"/>
        <function-ref name="stop" scoped="" ref="0x2ad802e65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ad802e6d350" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ad802e6d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ad802e69580"/>
        <function-ref name="test" scoped="" ref="0x2ad802e6ac20"/>
        <function-ref name="get" scoped="" ref="0x2ad802e6c020"/>
        <function-ref name="captured" scoped="" ref="0x2ad802e6c980"/>
        <function-ref name="reset" scoped="" ref="0x2ad802e6ce58"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802e690f8"/>
        <function-ref name="set" scoped="" ref="0x2ad802e6c4a8"/>
        <function-ref name="start" scoped="" ref="0x2ad802e6a310"/>
        <function-ref name="stop" scoped="" ref="0x2ad802e6a798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2ad802e64020" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2ad802e64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad802e617a8"/>
        <function-ref name="fired" scoped="" ref="0x2ad802e62560"/>
        <function-ref name="get" scoped="" ref="0x2ad802e64ba0"/>
        <function-ref name="reset" scoped="" ref="0x2ad802e629e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802e61c30"/>
        <function-ref name="set" scoped="" ref="0x2ad802e62088"/>
        <function-ref name="start" scoped="" ref="0x2ad802e62e70"/>
        <function-ref name="stop" scoped="" ref="0x2ad802e61320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2ad802e60360" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2ad802e60360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad802e5dc20"/>
        <function-ref name="fired" scoped="" ref="0x2ad802e5f980"/>
        <function-ref name="get" scoped="" ref="0x2ad802e5f020"/>
        <function-ref name="reset" scoped="" ref="0x2ad802e5fe08"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802e5c0f8"/>
        <function-ref name="set" scoped="" ref="0x2ad802e5f4a8"/>
        <function-ref name="start" scoped="" ref="0x2ad802e5d310"/>
        <function-ref name="stop" scoped="" ref="0x2ad802e5d798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ad802e38be0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad802e38be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad802e70db8"/>
        <function-ref name="test" scoped="" ref="0x2ad802e704a8"/>
        <function-ref name="get" scoped="" ref="0x2ad802e357a0"/>
        <function-ref name="setScale" scoped="" ref="0x2ad802e6f270"/>
        <function-ref name="getScale" scoped="" ref="0x2ad802e6f748"/>
        <function-ref name="reset" scoped="" ref="0x2ad802e715b8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802e71130"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802e70930"/>
        <function-ref name="set" scoped="" ref="0x2ad802e35c28"/>
        <function-ref name="start" scoped="" ref="0x2ad802e71a40"/>
        <function-ref name="stop" scoped="" ref="0x2ad802e70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad802f13b68" loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad802f13b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TOne" ref="0x2ad80221f1c8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad802f10238"/>
        <function-ref name="fired" scoped="" ref="0x2ad802f112b0"/>
        <function-ref name="startAt" scoped="" ref="0x2ad802f11bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad802f11738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad802f106c0"/>
        <function-ref name="start" scoped="" ref="0x2ad802f128f8"/>
        <function-ref name="stop" scoped="" ref="0x2ad802f12dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad802edadc0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad802edadc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ad802152388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ad802152388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad802ed9170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad802ed9540" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad802ed9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad802f0a6f8"/>
        <function-ref name="test" scoped="" ref="0x2ad802f0bdb8"/>
        <function-ref name="get" scoped="" ref="0x2ad802f0c0f8"/>
        <function-ref name="setScale" scoped="" ref="0x2ad802f0ab80"/>
        <function-ref name="getScale" scoped="" ref="0x2ad802f08088"/>
        <function-ref name="reset" scoped="" ref="0x2ad802f0b020"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802f0ca58"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802f0a270"/>
        <function-ref name="set" scoped="" ref="0x2ad802f0c580"/>
        <function-ref name="start" scoped="" ref="0x2ad802f0b4a8"/>
        <function-ref name="stop" scoped="" ref="0x2ad802f0b930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ad8034ea750" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ad8034ea750"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2ad802152020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2ad802152020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TOne" ref="0x2ad80221f1c8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ad8034e7020"/>
        <function-ref name="fired" scoped="" ref="0x2ad8034e8020"/>
        <function-ref name="startAt" scoped="" ref="0x2ad8034e8930"/>
        <function-ref name="isRunning" scoped="" ref="0x2ad8034e84a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ad8034e74a8"/>
        <function-ref name="start" scoped="" ref="0x2ad8034e9578"/>
        <function-ref name="stop" scoped="" ref="0x2ad8034e9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2ad8034e1a80" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2ad8034e1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ad8034de270"/>
        <function-ref name="fired" scoped="" ref="0x2ad8034df020"/>
        <function-ref name="get" scoped="" ref="0x2ad8034e0658"/>
        <function-ref name="reset" scoped="" ref="0x2ad8034df4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2ad8034de6f8"/>
        <function-ref name="set" scoped="" ref="0x2ad8034e0ae0"/>
        <function-ref name="start" scoped="" ref="0x2ad8034df930"/>
        <function-ref name="stop" scoped="" ref="0x2ad8034dfdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2ad8034e79c8" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2ad8034e79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad8034e3b80"/>
        <function-ref name="test" scoped="" ref="0x2ad8034e3270"/>
        <function-ref name="get" scoped="" ref="0x2ad8034e5598"/>
        <function-ref name="setScale" scoped="" ref="0x2ad8034e1088"/>
        <function-ref name="getScale" scoped="" ref="0x2ad8034e1560"/>
        <function-ref name="reset" scoped="" ref="0x2ad8034e44a8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad8034e4020"/>
        <function-ref name="isOn" scoped="" ref="0x2ad8034e36f8"/>
        <function-ref name="set" scoped="" ref="0x2ad8034e5a20"/>
        <function-ref name="start" scoped="" ref="0x2ad8034e4930"/>
        <function-ref name="stop" scoped="" ref="0x2ad8034e4db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad802f4d400" loc="28:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ad802f4d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802f4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad802f48108" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad802f48108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TOne" ref="0x2ad80221f1c8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802f48e58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad802f47798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad802f47310"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802f47c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad802f45e08" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad802f45e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TOne" ref="0x2ad80221f1c8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802f44be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad802f32548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad802f320c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802f329d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ad802f30020" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ad802f30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ad802f6e0f8"/>
        <function-ref name="test" scoped="" ref="0x2ad802f707a8"/>
        <function-ref name="get" scoped="" ref="0x2ad802f30ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2ad802f6e580"/>
        <function-ref name="getScale" scoped="" ref="0x2ad802f6ea58"/>
        <function-ref name="reset" scoped="" ref="0x2ad802f719e8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802f71560"/>
        <function-ref name="isOn" scoped="" ref="0x2ad802f70c30"/>
        <function-ref name="set" scoped="" ref="0x2ad802f71088"/>
        <function-ref name="start" scoped="" ref="0x2ad802f71e70"/>
        <function-ref name="stop" scoped="" ref="0x2ad802f70320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ad802f90450" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2ad802f90450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802f8f1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad802f8fae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad802f8f658"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802f8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ad802f6a270" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad802f6a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802f91020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad802f91930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad802f914a8"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802f91db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ad802f8cc38" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ad802f8cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802f8b820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ad802f8be48" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ad802f8be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ad802f8abe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ad802f88548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ad802f880c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ad802f889d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2ad802f803c0" loc="31:/opt/tinyos-2.1.1/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2ad802f803c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ad8021dc788"/>
            <typename><typedef-ref name="TMicro" ref="0x2ad8021e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ad802f7f150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2ad802f7bb98" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TransmitPowerFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2ad802f7bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802f7a020"/>
        <function-ref name="get" scoped="" ref="0x2ad802f7a1a8"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802f7a330"/>
        <function-ref name="set" scoped="" ref="0x2ad802f7a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2ad802f78140" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.RSSIFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2ad802f78140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802f78490"/>
        <function-ref name="get" scoped="" ref="0x2ad802f78618"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802f787a0"/>
        <function-ref name="set" scoped="" ref="0x2ad802f78928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2ad802f76600" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TimeSyncFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2ad802f76600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad802f76950"/>
        <function-ref name="get" scoped="" ref="0x2ad802f76ad8"/>
        <function-ref name="setValue" scoped="" ref="0x2ad802f76c60"/>
        <function-ref name="set" scoped="" ref="0x2ad802f76de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad80304e390" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="PullAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad80304e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad80304e6e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad80304e868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80304e9f0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80304eb78"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80304ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad80304d020" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="PullAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad80304d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80304d370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad80304d4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad80304d680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80304d808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad80304d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad80304dbd8" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="PullAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad80304dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad80304c020"/>
        <function-ref name="source" scoped="" ref="0x2ad80304c1a8"/>
        <function-ref name="address" scoped="" ref="0x2ad80304c330"/>
        <function-ref name="destination" scoped="" ref="0x2ad80304c4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ad80304c640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad80304c7c8"/>
        <function-ref name="type" scoped="" ref="0x2ad80304c950"/>
        <function-ref name="setType" scoped="" ref="0x2ad80304cad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad80304cc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad80304cde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad80304b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad80304b2a8" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="PullAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ad80304b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad80304b5f8"/>
        <function-ref name="noAck" scoped="" ref="0x2ad80304b780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad80304b908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad80355b7b0" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="PullAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad80355b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad80355bb00"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad80355bc88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80355be10"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80355a020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80355a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad80355a3f0" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="PullAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad80355a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80355a740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad80355a8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad80355aa50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80355abd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad80355ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad803559020" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="PullAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad803559020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad803559370"/>
        <function-ref name="source" scoped="" ref="0x2ad8035594f8"/>
        <function-ref name="address" scoped="" ref="0x2ad803559680"/>
        <function-ref name="destination" scoped="" ref="0x2ad803559808"/>
        <function-ref name="setSource" scoped="" ref="0x2ad803559990"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad803559b18"/>
        <function-ref name="type" scoped="" ref="0x2ad803559ca0"/>
        <function-ref name="setType" scoped="" ref="0x2ad803559e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad803558020"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad8035581a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad803558330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ad8035585b8" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="PullAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ad8035585b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ad803558908"/>
        <function-ref name="noAck" scoped="" ref="0x2ad803558a90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ad803558c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ad80354fa80" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PullAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad80354fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad80354fdd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad80354e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80354e1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80354e330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80354e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ad80354e760" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PullAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad80354e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad80354eab0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad80354ec38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80354edc0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80354d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80354d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad80354d3f0" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PullAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad80354d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad80354d740"/>
        <function-ref name="source" scoped="" ref="0x2ad80354d8c8"/>
        <function-ref name="address" scoped="" ref="0x2ad80354da50"/>
        <function-ref name="destination" scoped="" ref="0x2ad80354dbd8"/>
        <function-ref name="setSource" scoped="" ref="0x2ad80354dd60"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad80354c020"/>
        <function-ref name="type" scoped="" ref="0x2ad80354c1a8"/>
        <function-ref name="setType" scoped="" ref="0x2ad80354c330"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad80354c4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad80354c640"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad80354c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad80301e020" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad80301e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad80301e370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad80301e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80301e680"/>
        <function-ref name="cancel" scoped="" ref="0x2ad80301e808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad80301e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ad803061060" loc="40:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ad803061060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad8030613d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad803061558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad8030616e0"/>
        <function-ref name="cancel" scoped="" ref="0x2ad803061868"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad8030619f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ad8030622c8" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ad8030622c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ad803062638"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad8030627c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad803062948"/>
        <function-ref name="cancel" scoped="" ref="0x2ad803062ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ad803062c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ad80305f268" loc="42:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad80305f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad80305f5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad80305f740"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad80305f8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad80305fa50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad80305fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2ad80305e020" loc="161:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2ad80305e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad80305e370"/>
        <function-ref name="runTask" scoped="" ref="0x2ad80305e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2ad80305e7c0" loc="118:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2ad80305e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ad80305eb10"/>
        <function-ref name="runTask" scoped="" ref="0x2ad80305ec98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ad803061c38" loc="41:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad803061c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad803060020"/>
        <function-ref name="source" scoped="" ref="0x2ad8030601a8"/>
        <function-ref name="address" scoped="" ref="0x2ad803060330"/>
        <function-ref name="destination" scoped="" ref="0x2ad8030604b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ad803060640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad8030607c8"/>
        <function-ref name="type" scoped="" ref="0x2ad803060950"/>
        <function-ref name="setType" scoped="" ref="0x2ad803060ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad803060c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad803060de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad80305f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ad803088a28" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="PullAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ad803088a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ad803088d78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ad803087020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ad8030871a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ad803087330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ad8030874b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ad803088490" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="PullAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ad803088490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ad8030887e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ad803087700" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="PullAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ad803087700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ad803087a50"/>
        <function-ref name="source" scoped="" ref="0x2ad803087bd8"/>
        <function-ref name="address" scoped="" ref="0x2ad803087d60"/>
        <function-ref name="destination" scoped="" ref="0x2ad803086020"/>
        <function-ref name="setSource" scoped="" ref="0x2ad8030861a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ad803086330"/>
        <function-ref name="type" scoped="" ref="0x2ad8030864b8"/>
        <function-ref name="setType" scoped="" ref="0x2ad803086640"/>
        <function-ref name="isForMe" scoped="" ref="0x2ad8030867c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ad803086950"/>
        <function-ref name="localGroup" scoped="" ref="0x2ad803086ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ad803082020" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad803082020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad803082370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad8030824f8"/>
        <function-ref name="led1On" scoped="" ref="0x2ad803082680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad803082808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad803082990"/>
        <function-ref name="get" scoped="" ref="0x2ad803082b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad803082ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad803081330"/>
        <function-ref name="set" scoped="" ref="0x2ad803082e28"/>
        <function-ref name="led0On" scoped="" ref="0x2ad803081020"/>
        <function-ref name="led2On" scoped="" ref="0x2ad8030811a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2ad80307de70" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ad80307de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80307c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80307c370"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80307c4f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80307c680"/>
        <function-ref name="get" scoped="" ref="0x2ad80307c808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80307c990"/>
        <function-ref name="set" scoped="" ref="0x2ad80307cb18"/>
        <function-ref name="clr" scoped="" ref="0x2ad80307cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ad80307e218" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad80307e218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad80307e568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2ad80307b020" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ad80307b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80307b370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80307b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80307b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80307b808"/>
        <function-ref name="get" scoped="" ref="0x2ad80307b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80307bb18"/>
        <function-ref name="set" scoped="" ref="0x2ad80307bca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad80307be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ad80307e7e0" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ad80307e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ad80307eb30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ad80307ecb8"/>
        <function-ref name="led1On" scoped="" ref="0x2ad80307ee40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ad80307d020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ad80307d1a8"/>
        <function-ref name="get" scoped="" ref="0x2ad80307d330"/>
        <function-ref name="led1Off" scoped="" ref="0x2ad80307d4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ad80307dad8"/>
        <function-ref name="set" scoped="" ref="0x2ad80307d640"/>
        <function-ref name="led0On" scoped="" ref="0x2ad80307d7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ad80307d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2ad80307a190" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ad80307a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad80307a4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ad80307a668"/>
        <function-ref name="toggle" scoped="" ref="0x2ad80307a7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad80307a978"/>
        <function-ref name="get" scoped="" ref="0x2ad80307ab00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad80307ac88"/>
        <function-ref name="set" scoped="" ref="0x2ad80307ae10"/>
        <function-ref name="clr" scoped="" ref="0x2ad803079020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2ad8030a4020" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ad8030a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030a4370"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030a44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030a4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030a4808"/>
        <function-ref name="get" scoped="" ref="0x2ad8030a4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030a4b18"/>
        <function-ref name="set" scoped="" ref="0x2ad8030a4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030a4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2ad8030a31b0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ad8030a31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030a3500"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030a3688"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030a3810"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030a3998"/>
        <function-ref name="get" scoped="" ref="0x2ad8030a3b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030a3ca8"/>
        <function-ref name="set" scoped="" ref="0x2ad8030a3e30"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2ad8030a1460" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ad8030a1460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ad8030a17b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2ad8030a2378" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ad8030a2378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ad8030a26c8"/>
        <function-ref name="isInput" scoped="" ref="0x2ad8030a2850"/>
        <function-ref name="toggle" scoped="" ref="0x2ad8030a29d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ad8030a2b60"/>
        <function-ref name="get" scoped="" ref="0x2ad8030a2ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ad8030a2e70"/>
        <function-ref name="set" scoped="" ref="0x2ad8030a1020"/>
        <function-ref name="clr" scoped="" ref="0x2ad8030a11a8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ad802270588" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ad802263258" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2ad802274408" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2ad802274198" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2ad80226db98" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2ad8022775b8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ad802277348" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2ad8022760a8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ad802277dd0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2ad8022768f0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ad80228bab0" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ad80228a1d8" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ad80228cd20" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ad802289020" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad80228b400" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ad80228a890" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad80228c020" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ad80228c690" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ad80214d968" loc="46:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ad80214f878" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ad80214f0d8" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ad80215b608" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ad80215bdf8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ad802224610" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ad80224c450" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ad8021b7940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ad802240760" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2ad8024ae4e8" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad8024ae278" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ad8024aca40" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad8024ac7d0" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad8024af8b0" loc="83:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad8024aecd0" loc="109:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x2ad80248d6e0" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80248d470" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ad80248c6f8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80248c488" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad802489840" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802489278" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad802489588" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad802488978" loc="95:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ad80248aaa8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80248a518" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad80248a828" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad8024a09c8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ad8024a00c8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ad8024a0428" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad8024a0738" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad8024b1020" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024b38e0" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad8024b3bf0" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad8024b30d8" loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad80249ec80" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80249ea10" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad80249c2a0" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80249fcc8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad80249c020" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ad8024aac48" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
              <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024aa348" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ad8024aa670" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad8024aa980" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ad8024bb550" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ad8024bbc88" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ad8024ba420" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ad8024b92a8" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ad8024b78b0" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad8024b6070" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ad8024bab38" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad8024b6b70" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ad8024b6900" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ad8024bcdf8" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ad8024b9a18" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ad8024b7178" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2ad8024a5b08" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad80247ab50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad8024a5898" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ad802498bd8" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad802498968" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ad80249a178" loc="57:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ad80249abd0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad80249a960" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ad802494450" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad802499e60" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad8024941d0" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ad802499020" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad802496958" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad802496c90" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2ad802492768" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad8024924f8" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ad8024919d8" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad802491458" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2ad802491758" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad80247a7a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ad802493600" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad802493390" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ad8024a3020" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad80247ab50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad8024a4920" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ad8024a4c50" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad80247ab50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2ad8024a3d88" loc="184:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad80247ab50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2ad8024dda58" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad8024dda58"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad8024ddc88" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad8024ddc88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2ad8024f7938" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad8024ddc88"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024f76c8" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2ad8024f5a38" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024f57c8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2ad8024f97d0" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024f9560" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad8024f4c68" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad8024ddc88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024f46a8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ad8024f49e8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad8024ddc88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2ad8024e1050" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2ad8024cca40" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ad8024ccda0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2ad8024eed88" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024ee7a0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2ad8024eeb08" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2ad8024eb020" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024ecc48" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2ad8024ee020" loc="57:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2ad8024ef678" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2ad8024ef408" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2ad8024dc520" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024dc2b0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2ad8024db630" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024db3c0" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2ad8024da700" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024da490" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2ad8024e50a8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024e6dd0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2ad8024e9348" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024dece8" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2ad8024e90c8" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2ad8024e6118" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024e8e78" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2ad8024e86b0" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024e80c8" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2ad8024e8430" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2ad8024e4020" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8024e5d30" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2ad802510a68" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2ad802510a68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2ad80250aa18" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80250a7a8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad80250a020" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2ad802510a68"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80250cd40" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2ad80250c5b8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80250c348" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad802509708" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2ad802510a68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802509140" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ad802509488" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2ad802510a68"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad802519d60" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad802519d60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ad802516618" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2ad80250e258" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2ad802511a60" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ad8025117f0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2ad80250ea30" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ad802545b88" loc="110:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2ad802546c50" loc="87:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ad802546360" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ad802545428" loc="92:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ad802544848" loc="118:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="24:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2ad802540c10" loc="30:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ad802538e18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025409a0" loc="30:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ad802543760" loc="26:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ad802538e18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ad802540290" loc="28:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ad802538e18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802540020" loc="28:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ad80253d610" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ad802538e18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80253d020" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad80253d390" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ad802538e18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ad80253f938" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ad802538e18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80253f348" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad80253f6b8" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ad802538e18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2ad80253c980" loc="38:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2ad8025389a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80253c710" loc="38:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2ad80253b600" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2ad8025389a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80253b020" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ad80253b380" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2ad8025389a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ad80253c020" loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80253dcc0" loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2ad80253bd08" loc="42:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2ad8025389a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0x2ad8025345c0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ad802538e18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ad802535c20" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ad802538e18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ad802534020" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad802534330" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad802530988" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025303c0" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad8025306d0" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad802531b70" loc="99:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad802532338" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025320c8" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad8025312a0" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802532c68" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad802531020" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2ad80258d328" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x2ad80256ea88" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x2ad80256f0d8" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x2ad8025713e0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x2ad802571e80" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802571c10" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x2ad802586328" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x2ad80256f9d8" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2ad8025708f8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802570688" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x2ad80256e258" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2ad802590030" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad80247ab50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802592d98" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2ad80258f670" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80258f400" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ad8025939b0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802593740" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ad802594290" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802594020" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ad802592680" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025920c8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad802592400" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ad802593020" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802594998" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad802594cd0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ad802590cb0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad80247ab50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802590700" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ad802590a30" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad80247ab50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2ad802574b28" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2ad80257f4a0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2ad80257d670" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80257d400" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2ad80257e020" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80257fcb8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2ad80257eaa8" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80257e838" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2ad8025a6450" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2ad8025a75d8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2ad8025a7368" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad8025a7d10" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2ad8025aab70" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2ad8025a6be8" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2ad8025bcd28" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025bcab8" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ad8025a2338" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after th header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025a20c8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad8025bd8c8" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ad8025bd118" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025a2af0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ad8025a2e20" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2ad8025a37e0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025a3570" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2ad8025bc338" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025bc0c8" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad80256c328" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2ad802555b10" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025558a0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2ad80256cde0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80256cb70" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2ad80256b670" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2ad802569290" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802569020" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2ad802572020" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802579d78" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2ad80257a020" loc="75:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2ad802561750" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad802561170" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ad8025614d0" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2ad8025654e8" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802565278" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2ad802563020" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802565d18" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2ad802563e80" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad8025638a0" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ad802563c00" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2ad802554c78" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2ad802566a40" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025664c8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ad8025667c0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2ad802562998" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802562728" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2ad802597290" loc="120:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="116:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802597020" loc="120:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2ad8025ab538" loc="157:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025ab2c8" loc="157:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2ad80258a850" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80258a2b0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2ad80258a5d0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2ad8025887f0" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802588580" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2ad80259aa28" loc="109:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="106:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80259a7b8" loc="109:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2ad802589d48" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802589ad8" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2ad802598808" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802598278" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2ad802598588" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2ad80259f118" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad8025a0ad0" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ad8025a0e30" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2ad8025ad020" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="142:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025ae9c8" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad8025aecf8" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2ad8025ae290" loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="137:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025ae020" loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2ad8025892d0" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802589060" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2ad80259d020" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad80259f968" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ad80259fcc8" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2ad80259daa8" loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80259d838" loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2ad8025ada20" loc="151:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="147:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025ad7b0" loc="151:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2ad8025a02d0" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025a0060" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2ad80259a040" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80259ba78" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2ad80259bd98" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2ad8025af748" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="132:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025af198" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad8025af4c8" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2ad802596020" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025979e8" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2ad802597d08" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2ad80259c7f0" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80259c278" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ad80259c570" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2ad80258bae0" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80258b870" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2ad802596a28" loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025967b8" loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2ad80259b2d0" loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80259b060" loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2ad802576d60" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025767b0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2ad802576ae0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2ad802575540" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2ad8025774e8" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802577278" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2ad802576020" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802577c98" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2ad802583020" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802584cb0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2ad802584468" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8025841f8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2ad802583808" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2ad802581290" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802581020" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad80261c4c8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad80261c4c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad80261c6f8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad80261c6f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ad802617020" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad80261c6f8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad80261a1d8" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ad8026186c0" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad80261c6f8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad80261c6f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad802618120" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad80261c6f8"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ad802618440" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad80261c6f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ad80261a948" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ad8026177a0" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad80261c6f8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad80261b290" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad80261c6f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad80261b020" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad80261c6f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad80261ba60" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2ad8026250d8" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2ad802625980" loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2ad802624328" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2ad802628980" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2ad802658a28" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad8026587b8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad8026543d0" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802654160" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad8026558f0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802655348" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad802655670" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2ad802657e28" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
              <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802657b80" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2ad80265e258" loc="50:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2ad80265d0d8" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2ad80265e9b8" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad80247ab50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2ad80265fa08" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad80247ab50"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2ad80265f450" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad80247ab50"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ad80265f788" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2ad8026f1e38" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ad8026ee760" loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2ad8026e9c60" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2ad8026e94b0" loc="49:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2ad8026eb4f0" loc="80:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2ad8026ebce0" loc="88:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2ad802700ac8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad8026eac40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ad802700858" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad8026eac40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2ad802704ae8" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2ad8027015e8" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad8026eac40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ad802701378" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ad8026eac40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ad802700020" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2ad8026eac40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2ad80281e020" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
              <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80281fc08" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2ad80281f2d0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad80281f060" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ad802832020" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x2ad802833d10" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2ad802832790" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad80283bd10" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x2ad80283baa0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad802833658" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x2ad8028333e8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2ad802839030" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x2ad80283ad98" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2ad8028384e0" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ad802838270" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2ad802839ad8" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x2ad802839868" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2ad802837020" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x2ad802838d00" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2ad80283a5b0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ad80283a340" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad802478020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad8028b1518" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad8028b1518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ad8028a7020" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad8028ac8f8" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ad8028aa5b8" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad8028aa020" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ad8028aa338" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ad8028ab870" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ad8028a6020" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ad8028a7740" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ad8028ab0d8" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ad8028ae020" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad8028b1d78" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ad8028a95b8" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad8028a9020" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ad8028a9338" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ad8028aea60" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad8028ae7f0" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad8028ac258" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad8029137b0" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad8029137b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad8029139e0" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad8029139e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ad8029102a8" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad8029139e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ad80290f328" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ad802910ac0" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ad80290fa18" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ad802933290" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ad802935178" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2ad802937020" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ad802935ae8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ad802935878" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2ad8029369d0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad802936760" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ad802933c08" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ad802933998" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2ad802937750" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2ad8029360a8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad802937e08" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2ad80294d7f0" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2ad802950800" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2ad80294e020" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2ad80294e7f0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2ad80294c020" loc="87:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2ad80294d020" loc="75:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2ad802951650" loc="46:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad8021fd020"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2ad8021fd428"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2ad802950030" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad8021fd020"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2ad8021fd428"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ad802951d98" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad8021fd020"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2ad8021fd428"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ad8029386a0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad8029386a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2ad80292de20" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad80292e0d8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad802930020" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad8029386a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ad80292e7e0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ad8029565c0" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad802930968" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad8029386a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ad8029306f8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad8029386a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad80292d020" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad80292d708" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ad80291e678" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad80291e678"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2ad802940cf0" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ad802941e20" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad80291b020" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad80291e678"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2ad80293f690" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2ad80293f420" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2ad80293fe10" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ad8029197f8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ad8029190d8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ad8029405c8" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad80291b958" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad80291e678"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ad80291b6e8" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad80291e678"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad802941020" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad802941708" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2ad802aad328" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2ad802aac378" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2ad802aacd80" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ad802aacb10" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2ad802aaa538" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2ad802aadb58" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2ad802aaad68" loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2ad802aaf9f0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802aaf780" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2ad802aa7d88" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad802aa7580" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad802aa7310" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2ad802b10730" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad802b104c0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ad802b13cf8" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2ad802b4a070" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2ad802b1b8a0" loc="35:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ad801878608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2ad802b57020" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad802b57020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2ad802b57ac8" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad802b57020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2ad802b57858" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad802b57020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2ad802b920a8" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802b93dc0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad802b95020" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802b66cd8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2ad802b95d00" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802b95770" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ad802b95a80" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad802b936c8" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802b93458" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad802c57420" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad802c57420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad802c57650" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad802c57650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2ad802c56118" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad802c57650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad802c57e78" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad802c57650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2ad802c5bb48" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ad802c5abf0" loc="55:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ad802c5a4b8" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ad802c5a248" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2ad802c5b360" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2ad802c629e8" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad802c62778" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2ad802c61cf0" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad802c61a80" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2ad802c61258" loc="52:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ad802c5f720" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad802c5f4b0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ad802d338f0" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad802d338f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2ad802d2b2d0" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2ad802d2b060" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ad802d2c1d8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad802d301d8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad802d338f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ad802d2f4f0" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad802d338f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ad802d2f280" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad802d338f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ad802d2fc30" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ad802d2c928" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad802d30b10" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad802d338f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ad802d308a0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad802d338f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad802d2d360" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad802d2da48" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad802d4ccd0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ad802d4c3c0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ad802d4c720" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad802d4ca40" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad802d482c0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ad802d4a540" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ad802d4a8a0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad802d4abc0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ad801877b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ad802d48020" loc="72:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2ad802d4e290" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2ad802d4e020" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2ad802d6f760" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2ad802d65020" loc="109:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2ad802d6ab98" loc="100:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2ad802d659c8" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2ad802d65758" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2ad802d6f020" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2ad802d67640" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2ad802d673d0" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2ad802d6b3f8" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2ad802d6b188" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2ad802d6e610" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2ad802d9a290" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2ad802d9a020" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2ad802d6bb30" loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2ad802d64a30" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2ad802d647c0" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2ad802d9c8f0" loc="120:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2ad802d66838" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2ad802d665c8" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2ad802d9b7d0" loc="124:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2ad802d69588" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2ad802d69318" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ad802d6c020" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad802d6ecf8" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2ad802d6a498" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2ad802d6a228" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2ad802d67e50" loc="106:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2ad802d64110" loc="112:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2ad802d9c178" loc="115:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2ad802d9b070" loc="122:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2ad802d69ca0" loc="103:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad80214b9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2ad802d6fe78" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2ad802d6c9a8" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ad802d6c738" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ad802df2748" loc="74:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad802df0020" loc="84:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2ad802e471d8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ad802e44578" loc="67:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2ad802e48328" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ad802e43780" loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ad802e43020" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ad802e44c78" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2ad802e454c0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad802e45250" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ad802e41290" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ad802e41020" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2ad802e48a58" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2ad802e45de8" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad802e45b78" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2ad802e47b00" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad802e47890" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad802ff42a0" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802ff7c30" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad802ff4020" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad802ff05e8" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802ff0020" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad802ff0330" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad802fef740" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad801877160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad802ff34e8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802ff3278" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad802ff18f0" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad802ff1348" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad802490780"/>
                <typename><typedef-ref name="message_t" ref="0x2ad80248fcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad802ff1670" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad8021541a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
