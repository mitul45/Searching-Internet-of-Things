#include "Tag.h"
#include <Timer.h>
 
module PullTagC
{
   uses interface Boot;
   uses interface Timer<TMilli> as Timer0;
   uses interface Packet;
   uses interface AMPacket;
   uses interface AMSend;
   uses interface SplitControl as AMControl;
   uses interface Receive;
}
 
implementation
{
   bool busy = FALSE;
   message_t pkt;
   uint16_t counter = 0;
 
   event void Boot.booted()
   {
     call AMControl.start();							// start the radio
   }
 
   event void AMControl.startDone(error_t err)
   {
     if (err == SUCCESS)
     {
       call Timer0.startPeriodic(TIMER_PERIOD_MILLI);				// if radio turned on successfully, start timer for leds.
     }
     else
     {
       call AMControl.start();							// else retry
     }
   }

   event void Timer0.fired()
   {
     counter++;
     if (!busy)
     {
    	TagMsg* tagpkt = (TagMsg*)(call Packet.getPayload(&pkt, sizeof(TagMsg)));
    	tagpkt->nodeid = TOS_NODE_ID;
    	if (call AMSend.send(AM_BROADCAST_ADDR, &pkt, sizeof(TagMsg)) == SUCCESS)
    	{
      		busy = TRUE;
        }
     }	   
   }

   event void AMControl.stopDone(error_t err) 
   {}
 
   event void AMSend.sendDone(message_t* msg, error_t error)
   {
     if (&pkt == msg) {
       busy = FALSE;								// packet sent, so set flag to false
     }
   }
 }
